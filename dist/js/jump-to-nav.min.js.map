{"version":3,"sources":["jump-to-nav.js"],"names":["window","addEventListener","jumpToElement","document","querySelectorAll","scriptLinkage","getElementById","querySelector","param","activeSections","smoothScroll","topLocation","bottomLocation","autoClose","heading","zIndex","search","align","nest","css","urlParam","URLSearchParams","getAttribute","split","get","embeddedStyleTag","createElement","setAttribute","jumpToCSS","textContent","head","appendChild","navWrapperEl","classList","add","HTML","innerHTML","body","style","top","bottom","alignment","forEach","item","navItem","navList","searchTermsTitle","searchTermsID","index","options","title","semiColonSplit","splitOn","optionString","undefined","trim","hasAttribute","titleReady","str","replace","match","toLowerCase","toUpperCase","camelize","linkID","linkListItem","linkTitleText","linkATag","parentElement","closest","parentListItem","push","autoCompleteLinkage","script","onload","autoCompleteJS","autoComplete","placeHolder","data","src","resultItem","highlight","events","input","[object Object]","value","length","start","event","feedback","detail","focus","selection","arr","searchValue","i","findIndex","click","key","remove","childUl","parentNode","lastChild","documentElement","setTimeout","minimizeButton","el","panelHeader","panelBody","parseInt","getBoundingClientRect","jumpToHeaderHeight","offsetHeight","maxHeight","setMaxHeight","sectionsEl","navEl","observer","IntersectionObserver","items","isIntersecting","target","root","rootMargin","threshold","observe","activeSection","withinBoundaries","composedPath","includes","contains"],"mappings":"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","sourcesContent":["/*!\n    * Jump to navigation v1.2.0\n    * Need description.\n    *\n    * Copyright 2022 Marshall Crosby\n    * https://marshallcrosby.com\n*/\n\n\n/* ------------------------------------------------------------------------------\n    **TODO:\n    1. Query params\n        ✓ • Allow custom Y location\n        ✓ • Make nesting an option\n        ✓ • Allow custom z-index\n        ✓ • Allow external css\n        • Placement (left, right, top, bottom, custom)\n    ✓ 2. Click outside closes panel\n    ✓ 3. CSS dynamic max-height\n    ✓ 4. Focus nav item on current section in view\n    5. Add static site navigation\n    ✓ 6. Dynamic IDs if none\n    7. Better verbiage/names\n    8. Direction of menu opening\n-------------------------------------------------------------------------------- */\n\n\n\n(function () {\n    \"use strict\"\n    \n    window.addEventListener('load', function () {\n        const jumpToElement = document.querySelectorAll('[data-jtn-anchor]');\n\n        if (jumpToElement !== null) {\n    \n            /* --------------------------------------------------------------------------\n                Query params\n            ---------------------------------------------------------------------------- */\n    \n            const scriptLinkage = document.getElementById('jump-to-nav-js') || document.querySelector('script[src*=jump-to-nav]');\n            \n            const param = {\n               activeSections: null,\n               smoothScroll: null,\n               topLocation: null,\n               bottomLocation: null,\n               autoClose: null,\n               heading: null,\n               zIndex: null,\n               search: null,\n               align: null,\n               nest: null,\n               css: null\n            }\n        \n            if (scriptLinkage) {\n                const urlParam = new URLSearchParams(scriptLinkage.getAttribute('src').split('?')[1]);\n                \n                param.activeSections = urlParam.get('active-section');\n                param.smoothScroll = urlParam.get('smooth');\n                param.topLocation = urlParam.get('top');\n                param.bottomLocation = urlParam.get('bottom');\n                param.autoClose = urlParam.get('auto-close');\n                param.heading = urlParam.get('heading');\n                param.zIndex = urlParam.get('z-index');\n                param.search = urlParam.get('search');\n                param.align = urlParam.get('align');\n                param.nest = urlParam.get('nest');\n                param.css = urlParam.get('css');\n            }\n        \n        \n            /* --------------------------------------------------------------------------\n                Render nav css\n            ---------------------------------------------------------------------------- */\n        \n            if (param.css !== 'external') {\n                const embeddedStyleTag = document.createElement('style');\n                embeddedStyleTag.setAttribute('id', 'jumpToNavStyle');\n            \n                const jumpToCSS = `//import jump-to-nav.css`;\n            \n                // Apply in page styles to style tag\n                embeddedStyleTag.textContent = jumpToCSS;\n            \n                // Add in page styles to head\n                document.head.appendChild(embeddedStyleTag);\n            }\n        \n        \n            /* --------------------------------------------------------------------------\n                Create navigation element and populate it\n            ---------------------------------------------------------------------------- */\n            \n            //\n            // Render nav elements\n            //\n        \n            const navWrapperEl = document.createElement('div');\n            navWrapperEl.classList.add('jump-to-nav-wrapper');\n        \n            const HTML = `//import _jump-to-nav.html`;\n            navWrapperEl.innerHTML = HTML;\n            document.body.appendChild(navWrapperEl);\n    \n            if (param.topLocation !== null) {\n                navWrapperEl.style.top = param.topLocation;\n            }\n            \n            if (param.bottomLocation !== null) {\n                navWrapperEl.style.top = 'auto';\n                navWrapperEl.style.bottom = param.bottomLocation;\n            }\n            \n            if (param.zIndex !== null) {\n                navWrapperEl.style.zIndex = param.zIndex;\n            }\n    \n    \n            //\n            // Alignment\n            //\n    \n            if (param.align !== null) {\n                const alignment = param.align.split(',');\n    \n                if (alignment !== '') {\n                    alignment.forEach((item) => {\n                        navWrapperEl.classList.add('jump-to-nav-wrapper--align-' + item);\n                    });\n                }\n            }\n    \n    \n            //\n            // Set custom heading if param is set\n            //\n    \n            if (param.heading !== null) {\n                const headingEl = navWrapperEl.querySelector('.jump-to-nav__heading');\n    \n                headingEl.textContent = param.heading;\n            }\n        \n        \n            //\n            // Setup elements and add li and links\n            //\n        \n            const navItem = document.querySelector('.jump-to-nav__nav');\n            const navList = document.createElement('ul');\n            navList.classList.add('jump-to-nav__list');\n        \n            navItem.appendChild(navList);\n        \n            let searchTermsTitle = [];\n            let searchTermsID = [];\n            \n            jumpToElement.forEach((item, index) => {\n    \n                let options = null;\n                options = {\n                    title: null\n                };\n        \n                if (item.getAttribute('data-jtn-anchor') !== '') {\n                    const semiColonSplit = item.getAttribute('data-jtn-anchor').split(';');\n                    \n                    // Assign option values if any\n                    semiColonSplit.forEach(function (item, index) {\n                        if (semiColonSplit[index].split('title:')[1] !== undefined) {\n                            options.title = parseOption(semiColonSplit[index], 'title');\n                        }\n                    });          \n                }\n                \n                // Assign id if none is found\n                if (!item.hasAttribute('id')) {\n                    let titleClean = options.title.replace(/[^a-z0-9]/gi, ' ');\n                    let titleReady = camelize(titleClean);\n                    item.setAttribute('id', titleReady);\n                }\n    \n                const linkID = item.getAttribute('id');\n                const linkListItem = document.createElement('li');\n                \n                linkListItem.classList.add('jump-to-nav__item');\n                linkListItem.setAttribute('data-jump-id', linkID);\n                    \n                const linkTitleText = (options.title !== null) ? options.title : linkID;\n                const linkATag = `\n                    <a class=\"jump-to-nav__link\" href=\"#${ linkID }\">${ linkTitleText }</a>\n                `;\n        \n                linkListItem.innerHTML = linkATag;\n        \n                navList.appendChild(linkListItem);\n        \n                if (item.parentElement.closest('[data-jtn-anchor]')) {\n                    let parentListItem = item.parentElement.closest('[data-jtn-anchor]');\n                    parentListItem.setAttribute('data-jump-has-child', 'true');\n                    linkListItem.setAttribute('data-jump-parent', parentListItem.getAttribute('id'));    \n                }\n        \n                searchTermsTitle.push(linkTitleText);\n                searchTermsID.push(linkID);\n            });\n\n            if (param.search !== null) {\n                // Thanks to autoComplete.js and js CDN. Project repo: https://github.com/TarekRaafat/autoComplete.js\n                const autoCompleteLinkage = `https://cdn.jsdelivr.net/npm/@tarekraafat/autocomplete.js@10.2.7/dist/autoComplete.min.js`;\n                const script = document.createElement('script');\n                script.onload = function () {\n                    const autoCompleteJS = new autoComplete({\n                        placeHolder: 'Search',\n                        data: {\n                            src: searchTermsTitle\n                        },\n                        resultItem: {\n                            highlight: true,\n                        },\n                        events: {\n                            input: {\n                                focus() {\n                                    if (autoCompleteJS.input.value.length) {\n                                        autoCompleteJS.start();\n                                    }\n                                },\n                                selection(event) {\n                                    const feedback = event.detail;\n                                    autoCompleteJS.input.focus();\n                                    \n                                    const selection = feedback.selection.value;\n                                    autoCompleteJS.input.value = selection;\n                                    \n                                    const associatedLink = navWrapperEl.querySelector(`[href=\"#${searchTermsID[findIndex(autoCompleteJS.data.src, selection)]}\"]`)\n                                    associatedLink.click();\n                                },\n                                keyup(event) {\n                                    if (event.key === 'Enter') {\n                                        const firstSuggestion = navWrapperEl.querySelector(`#autoComplete_result_0`);\n                                        firstSuggestion.click();\n                                    }\n                                }\n                            },\n                        },\n                    });\n                };\n                script.src = autoCompleteLinkage;\n                document.head.appendChild(script);\n            } else {\n                document.querySelector('.jump-to-nav__search').remove();\n            }\n\n        \n            //\n            // Nest li(s) if jumpToElement is nested\n            //\n        \n            if (param.nest !== null) {\n                const linkChildren = navItem.querySelectorAll('[data-jump-parent]');\n        \n                linkChildren.forEach((item, index) => {\n                    const parentItem = navItem.querySelector('[data-jump-id=\"' + item.getAttribute('data-jump-parent') + '\"]');\n            \n                    parentItem.appendChild(item);\n                });\n            \n            \n                //\n                // Add ul inside items with children\n                //\n                \n                const nestedChildren = navItem.querySelectorAll('[data-jump-id]');\n                \n                nestedChildren.forEach((item, index) => {\n                    if (item.querySelector('[data-jump-parent]')) {\n                        var childUl = document.createElement('ul');\n                        childUl.classList.add('jump-to-nav__nested-list')\n                        item.appendChild(childUl);\n                    }\n                });\n            \n            \n                //\n                // Move unwrapped list items into ul\n                //\n            \n                const unwrapListItems = navItem.querySelectorAll('[data-jump-id] > [data-jump-id]');\n            \n                unwrapListItems.forEach((item, index) => {\n                    const siblingUl = item.parentNode.lastChild;\n            \n                    siblingUl.appendChild(item);\n                });\n            }\n\n        \n            //\n            // Add smooth scroll when using jump to nav\n            //\n        \n            if (param.smoothScroll !== null) {\n                const navAnchor = navItem.querySelectorAll('.jump-to-nav__item > a');\n        \n                navAnchor.forEach((item, index) => {\n                    item.addEventListener('click', function (event) {\n                        document.documentElement.classList.add('js-jump-to-nav-smooth-scroll');\n                        \n                        setTimeout(() => {\n                            document.documentElement.classList.remove('js-jump-to-nav-smooth-scroll');\n                        }, 400);\n                    });\n                });\n            }\n        \n        \n            //\n            // Maximize / minimize buttons\n            //\n        \n            const maximizeButton = navWrapperEl.querySelector('.jump-to-nav__maximize');\n        \n            maximizeButton.addEventListener('click', function () {\n                navWrapperEl.classList.add('jump-to-nav-wrapper--showing');\n            });\n        \n            const minimizeButton = navWrapperEl.querySelector('.jump-to-nav__minimize');\n        \n            minimizeButton.addEventListener('click', function () {\n                navWrapperEl.classList.remove('jump-to-nav-wrapper--showing');\n            });\n        \n    \n            //       \n            // Run max height function\n            //\n            setMaxHeight(navWrapperEl);\n    \n    \n            //\n            // Run active section function\n            //\n    \n            if (param.activeSections !== null) {\n                activeSection('[data-jtn-anchor]', '.jump-to-nav-wrapper');\n            }\n    \n    \n            //\n            // Click outside\n            //\n    \n            if (param.autoClose !== null) {\n                document.addEventListener('click', function (event) {\n                    const withinBoundaries = event.composedPath().includes(navWrapperEl);\n                    \n                    if (navWrapperEl.classList.contains('jump-to-nav-wrapper--showing')) {\n                        if (!withinBoundaries) {\n                            minimizeButton.click();\n                        }\n                    }\n                });\n            }\n        }\n    \n        /* --------------------------------------------------------------------------\n            Functions\n        ---------------------------------------------------------------------------- */\n    \n        //\n        // Parse options (function)\n        //\n    \n        function parseOption(splitOn, optionString) {\n            return splitOn.split(optionString + ':')[1].trim();\n        }\n    \n    \n        //\n        // Set height for overflow scrolling if needed\n        //\n    \n        function setMaxHeight(el) {\n            const panelHeader = document.querySelector('.jump-to-nav__header');\n            const panelBody = document.querySelector('.jump-to-nav__body');\n            const topLocation = parseInt(el.getBoundingClientRect().top);\n            const jumpToHeaderHeight = parseInt(panelHeader.offsetHeight);\n            const maxHeight = (topLocation + jumpToHeaderHeight) + 60;\n    \n            panelBody.style.maxHeight = 'calc(100vh - ' + maxHeight + 'px)';\n        }\n    \n    \n        //\n        // Set active class on nav item if section is in view\n        //\n    \n        function activeSection(sectionsEl, navEl) {\n            const jumpToElement = document.querySelectorAll(sectionsEl);\n            const navItem = document.querySelector(navEl);\n            const options = {\n                root: null,\n                rootMargin: '0px',\n                threshold: 0.5\n            }\n            \n            const observer = new IntersectionObserver( (items, observer) => {\n                for (let i = 0; i < items.length; i++) {\n                    if (items[i].isIntersecting) {\n                        navItem.querySelector('[data-jump-id=\"' + items[i].target.getAttribute('id') + '\"]').classList.add('jump-to-nav__item--active');\n                    } else {\n                        navItem.querySelector('[data-jump-id=\"' + items[i].target.getAttribute('id') + '\"]').classList.remove('jump-to-nav__item--active');\n                    }\n                }\n            }, options);\n    \n            for (let i = 0; i < jumpToElement.length; i++) {\n                observer.observe(jumpToElement[i]);\n            }\n        }\n    \n\n        //\n        // Camel case string\n        //\n    \n        function camelize(str) {\n            return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function(match, index) {\n            if (+match === 0) return \"\";\n                return index === 0 ? match.toLowerCase() : match.toUpperCase();\n            });\n        }\n\n\n        //\n        // Find index of array item\n        //\n\n        function findIndex(arr, searchValue ){\n            for (let i = 0; i < arr.length; ++i) {\n                if (arr[i] === searchValue) {\n                    return i;\n                }\n             }\n         }\n    });\n})();"]}