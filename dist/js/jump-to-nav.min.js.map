{"version":3,"sources":["jump-to-nav.js"],"names":["jumpToElement","document","querySelectorAll","scriptLinkage","getElementById","querySelector","param","activeSections","smoothScroll","topLocation","autoClose","heading","zIndex","nest","css","urlParam","URLSearchParams","getAttribute","split","get","embeddedStyleTag","createElement","setAttribute","jumpToCSS","textContent","head","appendChild","navWrapperEl","classList","add","HTML","innerHTML","body","style","top","navItem","navList","forEach","item","index","options","title","semiColonSplit","splitOn","optionString","undefined","trim","hasAttribute","titleReady","str","replace","match","toLowerCase","toUpperCase","camelize","linkID","linkListItem","linkATag","parentElement","closest","parentListItem","childUl","parentNode","lastChild","addEventListener","event","documentElement","setTimeout","remove","minimizeButton","el","panelHeader","panelBody","parseInt","getBoundingClientRect","jumpToHeaderHeight","offsetHeight","maxHeight","setMaxHeight","sectionsEl","navEl","observer","IntersectionObserver","items","i","length","isIntersecting","target","root","rootMargin","threshold","observe","activeSection","withinBoundaries","composedPath","includes","contains","click"],"mappings":"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","sourcesContent":["/*!\n    * Jump to navigation v1.1.7\n    * Need description.\n    *\n    * Copyright 2022 Marshall Crosby\n    * https://marshallcrosby.com\n*/\n\n\n/* ------------------------------------------------------------------------------\n    **TODO:\n    1. Query params\n        ✓ • Allow custom Y location\n        ✓ • Make nesting an option\n        ✓ • Allow custom z-index\n        ✓ • Allow external css\n        • Placement (left, right, top, bottom, custom)\n    ✓ 2. Click outside closes panel\n    ✓ 3. CSS dynamic max-height\n    ✓ 4. Focus nav item on current section in view\n    5. Add static site navigation\n    ✓ 6. Dynamic IDs if none\n    7. Better verbiage/names\n    8. Direction of menu opening\n-------------------------------------------------------------------------------- */\n\n\nconst jumpToElement = document.querySelectorAll('[data-jtn-anchor]');\n\n(function () {\n    \"use strict\"\n\n    if (jumpToElement) {\n\n        /* --------------------------------------------------------------------------\n            Query params\n        ---------------------------------------------------------------------------- */\n\n        const scriptLinkage = document.getElementById('jump-to-nav-js') || document.querySelector('script[src*=jump-to-nav]');\n        \n        const param = {\n           activeSections: null,\n           smoothScroll: null,\n           topLocation: null,\n           autoClose: null,\n           heading: null,\n           zIndex: null,\n           nest: null,\n           css: null\n        }\n    \n        if (scriptLinkage) {\n            const urlParam = new URLSearchParams(scriptLinkage.getAttribute('src').split('?')[1]);\n            \n            param.activeSections = urlParam.get('active-section');\n            param.smoothScroll = urlParam.get('smooth');\n            param.topLocation = urlParam.get('top');\n            param.autoClose = urlParam.get('auto-close');\n            param.heading = urlParam.get('heading');\n            param.zIndex = urlParam.get('z-index');\n            param.nest = urlParam.get('nest');\n            param.css = urlParam.get('css');\n        }\n    \n    \n        /* --------------------------------------------------------------------------\n            Render nav css\n        ---------------------------------------------------------------------------- */\n    \n        if (param.css !== 'external') {\n            const embeddedStyleTag = document.createElement('style');\n            embeddedStyleTag.setAttribute('id', 'jumpToNavStyle');\n        \n            const jumpToCSS = `//import jump-to-nav.css`;\n        \n            // Apply in page styles to style tag\n            embeddedStyleTag.textContent = jumpToCSS;\n        \n            // Add in page styles to head\n            document.head.appendChild(embeddedStyleTag);\n        }\n    \n    \n        /* --------------------------------------------------------------------------\n            Create navigation element and populate it\n        ---------------------------------------------------------------------------- */\n        \n        //\n        // Render nav elements\n        //\n    \n        const navWrapperEl = document.createElement('div');\n        navWrapperEl.classList.add('jump-to-nav-wrapper');\n    \n        const HTML = `//import _jump-to-nav.html`;\n        navWrapperEl.innerHTML = HTML;\n        document.body.appendChild(navWrapperEl);\n\n        if (param.topLocation !== null) {\n            navWrapperEl.style.top = param.topLocation;\n        }\n        \n        if (param.zIndex !== null) {\n            navWrapperEl.style.zIndex = param.zIndex;\n        }\n\n\n        //\n        // Set custom heading if param is set\n        //\n\n        if (param.heading !== null) {\n            const headingEl = navWrapperEl.querySelector('.jump-to-nav__heading');\n\n            headingEl.textContent = param.heading;\n        }\n    \n    \n        //\n        // Setup elements and add li and links\n        //\n    \n        const navItem = document.querySelector('.jump-to-nav__nav');\n        const navList = document.createElement('ul');\n        navList.classList.add('jump-to-nav__list');\n    \n        navItem.appendChild(navList);\n    \n        // let searchTermsArray = [];\n        \n        jumpToElement.forEach((item, index) => {\n\n            let options = null;\n            options = {\n                title: null\n            };\n    \n            if (item.getAttribute('data-jtn-anchor') !== '') {\n                const semiColonSplit = item.getAttribute('data-jtn-anchor').split(';');\n                \n                // Assign option values if any\n                semiColonSplit.forEach(function (item, index) {\n                    if (semiColonSplit[index].split('title:')[1] !== undefined) {\n                        options.title = parseOption(semiColonSplit[index], 'title');\n                    }\n                });          \n            }\n            \n            // Assign id if none is found\n            if (!item.hasAttribute('id')) {\n                let titleClean = options.title.replace(/[^a-z0-9]/gi, ' ');\n                let titleReady = camelize(titleClean);\n                item.setAttribute('id', titleReady);\n            }\n\n            const linkID = item.getAttribute('id');\n            const linkListItem = document.createElement('li');\n            \n            linkListItem.classList.add('jump-to-nav__item');\n            linkListItem.setAttribute('data-jump-id', linkID);\n                \n            const linkTitleText = (options.title !== null) ? options.title : linkID;\n            const linkATag = `\n                <a class=\"jump-to-nav__link\" href=\"#${ linkID }\">${ linkTitleText }</a>\n            `;\n    \n            linkListItem.innerHTML = linkATag;\n    \n            navList.appendChild(linkListItem);\n    \n            if (item.parentElement.closest('[data-jtn-anchor]')) {\n                let parentListItem = item.parentElement.closest('[data-jtn-anchor]');\n                parentListItem.setAttribute('data-jump-has-child', 'true');\n                linkListItem.setAttribute('data-jump-parent', parentListItem.getAttribute('id'));    \n            }\n    \n            // let searchTermsObj = {};\n            // searchTermsObj['title'] = linkTitleText;\n            // searchTermsObj['id'] = linkID;\n            // searchTermsArray.push(searchTermsObj);\n        });\n    \n    \n        //\n        // Nest li(s) if jumpToElement is nested\n        //\n    \n        if (param.nest !== null) {\n            const linkChildren = navItem.querySelectorAll('[data-jump-parent]');\n    \n            linkChildren.forEach((item, index) => {\n                const parentItem = navItem.querySelector('[data-jump-id=\"' + item.getAttribute('data-jump-parent') + '\"]');\n        \n                parentItem.appendChild(item);\n            });\n        \n        \n            //\n            // Add ul inside items with children\n            //\n            \n            const nestedChildren = navItem.querySelectorAll('[data-jump-id]');\n            \n            nestedChildren.forEach((item, index) => {\n                if (item.querySelector('[data-jump-parent]')) {\n                    var childUl = document.createElement('ul');\n                    childUl.classList.add('jump-to-nav__nested-list')\n                    item.appendChild(childUl);\n                }\n            });\n        \n        \n            //\n            // Move unwrapped list items into ul\n            //\n        \n            const unwrapListItems = navItem.querySelectorAll('[data-jump-id] > [data-jump-id]');\n        \n            unwrapListItems.forEach((item, index) => {\n                const siblingUl = item.parentNode.lastChild;\n        \n                siblingUl.appendChild(item);\n            });\n        }\n    \n    \n        //\n        // Add smooth scroll when using jump to nav\n        //\n    \n        if (param.smoothScroll !== null) {\n            const navAnchor = navItem.querySelectorAll('.jump-to-nav__item > a');\n    \n            navAnchor.forEach((item, index) => {\n                item.addEventListener('click', function (event) {\n                    document.documentElement.classList.add('js-jump-to-nav-smooth-scroll');\n                    \n                    setTimeout(() => {\n                        document.documentElement.classList.remove('js-jump-to-nav-smooth-scroll');\n                    }, 400);\n                });\n            });\n        }\n    \n    \n        //\n        // Maximize / minimize buttons\n        //\n    \n        const maximizeButton = navWrapperEl.querySelector('.jump-to-nav__maximize');\n    \n        maximizeButton.addEventListener('click', function () {\n            navWrapperEl.classList.add('jump-to-nav-wrapper--showing');\n        });\n    \n        const minimizeButton = navWrapperEl.querySelector('.jump-to-nav__minimize');\n    \n        minimizeButton.addEventListener('click', function () {\n            navWrapperEl.classList.remove('jump-to-nav-wrapper--showing');\n        });\n    \n\n        //       \n        // Run max height function\n        //\n        setMaxHeight(navWrapperEl);\n\n\n        //\n        // Run active section function\n        //\n\n        if (param.activeSections !== null) {\n            activeSection('[data-jtn-anchor]', '.jump-to-nav-wrapper');\n        }\n\n\n        //\n        // Click outside\n        //\n\n        if (param.autoClose !== null) {\n            document.addEventListener('click', function (event) {\n                const withinBoundaries = event.composedPath().includes(navWrapperEl);\n                \n                if (navWrapperEl.classList.contains('jump-to-nav-wrapper--showing')) {\n                    if (!withinBoundaries) {\n                        minimizeButton.click();\n                    }\n                }\n            });\n        }\n    }\n\n    /* --------------------------------------------------------------------------\n        Functions\n    ---------------------------------------------------------------------------- */\n\n    //\n    // Parse options (function)\n    //\n\n    function parseOption(splitOn, optionString) {\n        return splitOn.split(optionString + ':')[1].trim();\n    }\n\n\n    //\n    // Set height for overflow scrolling if needed\n    //\n\n    function setMaxHeight(el) {\n        const panelHeader = document.querySelector('.jump-to-nav__header');\n        const panelBody = document.querySelector('.jump-to-nav__body');\n        const topLocation = parseInt(el.getBoundingClientRect().top);\n        const jumpToHeaderHeight = parseInt(panelHeader.offsetHeight);\n        const maxHeight = (topLocation + jumpToHeaderHeight) + 60;\n\n        panelBody.style.maxHeight = 'calc(100vh - ' + maxHeight + 'px)';\n    }\n\n\n    //\n    // Set active class on nav item if section is in view\n    //\n\n    function activeSection(sectionsEl, navEl) {\n        const jumpToElement = document.querySelectorAll(sectionsEl);\n        const navItem = document.querySelector(navEl);\n        const options = {\n            root: null,\n            rootMargin: '0px',\n            threshold: 0.5\n        }\n        \n        const observer = new IntersectionObserver( (items, observer) => {\n            for (let i = 0; i < items.length; i++) {\n                if (items[i].isIntersecting) {\n                    navItem.querySelector('[data-jump-id=\"' + items[i].target.getAttribute('id') + '\"]').classList.add('jump-to-nav__item--active');\n                } else {\n                    navItem.querySelector('[data-jump-id=\"' + items[i].target.getAttribute('id') + '\"]').classList.remove('jump-to-nav__item--active');\n                }\n            }\n        }, options);\n\n        for (let i = 0; i < jumpToElement.length; i++) {\n            observer.observe(jumpToElement[i]);\n        }\n    }\n\n    //\n    // Camel case string\n    //\n\n    function camelize(str) {\n        return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function(match, index) {\n        if (+match === 0) return \"\";\n            return index === 0 ? match.toLowerCase() : match.toUpperCase();\n        });\n    }\n})();"]}