{"version":3,"sources":["jump-to-nav.js"],"names":["scriptLinkage","document","getElementById","topLocation","nest","zIndex","smoothScroll","urlParam","URLSearchParams","getAttribute","split","get","jumpToWrapperEl","createElement","classList","add","innerHTML","body","appendChild","style","top","textStyle","setAttribute","textContent","head","jumpToNavEl","querySelector","styleguidNavList","querySelectorAll","forEach","item","index","linkID","linkListItem","options","title","semiColonSplit","splitOn","optionString","undefined","trim","linkATag","parentElement","closest","parentListItem","childUl","parentNode","lastChild","addEventListener","event","documentElement","setTimeout","remove","minimizeButton","withinBoundaries","composedPath","includes","contains","click","el","panelHeader","panelBody","maxHeight","parseInt","getBoundingClientRect","offsetHeight","setMaxHeight"],"mappings":"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","sourcesContent":["/*!\n    * Jump to navigation v1.0.0\n    * Need description.\n    *\n    * Copyright 2022 Marshall Crosby\n    * https://marshallcrosby.com\n*/\n\n\n/* --------------------------------------------------------------------------\n    **TODO:\n    ✓ 1. Query params\n        • Allow custom Y location\n        • Make nesting an option\n        • Allow custom z-index\n    ✓ 2. Click outside closes panel\n    3. CSS dynamic max-height\n    4. Focus nav item on current section in view\n    5. Add static site navigation\n---------------------------------------------------------------------------- */\n\n\n(function () {\n    \"use strict\"\n\n\n    /* --------------------------------------------------------------------------\n        Get query params if any\n    ---------------------------------------------------------------------------- */\n\n    let scriptLinkage = document.getElementById('jump-to-nav-js');\n    let topLocation = null;\n    let nest = null;\n    let zIndex = null;\n    let smoothScroll = null;\n\n    if (scriptLinkage) {\n        let urlParam = new URLSearchParams(scriptLinkage.getAttribute('src').split('?')[1]);\n        topLocation = urlParam.get('top');\n        nest = urlParam.get('nest');\n        zIndex = urlParam.get('z-index');\n        smoothScroll = urlParam.get('smooth');\n    }\n\n\n    /* --------------------------------------------------------------------------\n        Create navigation element and populated it\n    ---------------------------------------------------------------------------- */\n    \n    //\n    // Render nav elements\n    //\n\n    let jumpToWrapperEl = document.createElement('div');\n    jumpToWrapperEl.classList.add('jump-to-nav-wrapper');\n\n    let jumpToHTML = `//import _jump-to-nav.html`;\n    jumpToWrapperEl.innerHTML = jumpToHTML;\n    document.body.appendChild(jumpToWrapperEl);\n\n    if (topLocation !== null) {\n        jumpToWrapperEl.style.top = topLocation;\n    }\n    \n    if (zIndex !== null) {\n        jumpToWrapperEl.style.zIndex = zIndex;\n    }\n\n\n    //\n    // Render nav css\n    //\n\n    let textStyle = document.createElement('style');\n    textStyle.setAttribute('id', 'jumpToNavStyle');\n\n    let jumpToCSS = `//import jump-to-nav.css`;\n\n    // Apply in page styles to style tag\n    textStyle.textContent = jumpToCSS;\n\n    // Add in page styles to head\n    document.head.appendChild(textStyle);\n\n\n    //\n    // Setup elements and add li and links\n    //\n\n    let jumpToNavEl = document.querySelector('.jump-to-nav__nav');\n    let styleguidNavList = document.createElement('ul');\n\n    jumpToNavEl.appendChild(styleguidNavList);\n\n    let jumpToSection = document.querySelectorAll('[data-jtn-anchor]');\n    // let searchTermsArray = [];\n    \n    jumpToSection.forEach(function (item, index) {\n        let linkID = item.getAttribute('id');\n        let linkListItem = document.createElement('li');\n        let options = null;\n        \n        linkListItem.classList.add('jump-to-nav__item');\n        linkListItem.setAttribute('data-jtn-id', linkID);\n\n        options = {\n            title: null\n        };\n\n        if (item.getAttribute('data-jtn-anchor') !== '') {\n            let semiColonSplit = item.getAttribute('data-jtn-anchor').split(';');\n            \n            // Assign option values if any\n            semiColonSplit.forEach(function (item, index) {\n                if (semiColonSplit[index].split('title:')[1] !== undefined) {\n                    options.title = parseOption(semiColonSplit[index], 'title');\n                }\n            });          \n        }\n\n        let linkTitleText = (options.title !== null) ? options.title : linkID;\n        let linkATag = `\n            <a href=\"#${ linkID }\">${ linkTitleText }</a>\n        `;\n\n        linkListItem.innerHTML = linkATag;\n\n        styleguidNavList.appendChild(linkListItem);\n\n        if (item.parentElement.closest('[data-jtn-anchor]')) {\n            let parentListItem = item.parentElement.closest('[data-jtn-anchor]');\n            parentListItem.setAttribute('data-jtn-has-child', 'true');\n            linkListItem.setAttribute('data-jtn-parent', parentListItem.getAttribute('id'));    \n        }\n\n        // let searchTermsObj = {};\n        // searchTermsObj['title'] = linkTitleText;\n        // searchTermsObj['id'] = linkID;\n        // searchTermsArray.push(searchTermsObj);\n    });\n\n\n    //\n    // Nest li(s) if section is nested\n    //\n\n    if (nest !== null) {\n        let jumpToLinkChildren = jumpToNavEl.querySelectorAll('[data-jtn-parent]');\n\n        jumpToLinkChildren.forEach(function(item, index) {\n            let parentItem = jumpToNavEl.querySelector('[data-jtn-id=\"' + item.getAttribute('data-jtn-parent') + '\"]');\n    \n            parentItem.appendChild(item);\n        });\n    \n    \n        //\n        // Add ul inside items with children\n        //\n        \n        let jumpToNestedChildren = jumpToNavEl.querySelectorAll('[data-jtn-id]');\n        \n        jumpToNestedChildren.forEach(function(item, index) {\n            if (item.querySelector('[data-jtn-parent]')) {\n                var childUl = document.createElement('ul');\n                item.appendChild(childUl);\n            }\n        });\n    \n    \n        //\n        // Move unwrapped list items into ul\n        //\n    \n        let unwrappedListItems = jumpToNavEl.querySelectorAll('[data-jtn-id] > [data-jtn-id]');\n    \n        unwrappedListItems.forEach(function(item, index) {\n            let siblingUl = item.parentNode.lastChild;\n    \n            siblingUl.appendChild(item);\n        });\n    }\n\n\n    //\n    // Add smooth scroll when using jump to nav\n    //\n\n    if (smoothScroll !== null) {\n        let jumpToNavAnchor = jumpToNavEl.querySelectorAll('.jump-to-nav__item > a');\n\n        jumpToNavAnchor.forEach(function (item, index) {\n            item.addEventListener('click', function (event) {\n                document.documentElement.classList.add('js-jump-to-nav-smooth-scroll');\n                \n                setTimeout(function () {\n                    document.documentElement.classList.remove('js-jump-to-nav-smooth-scroll');\n                }, 400);\n            });\n        });\n    }\n\n    \n\n    //\n    // Maximize / minimize buttons\n    //\n\n    let maximizeButton = jumpToWrapperEl.querySelector('.jump-to-nav__maximize');\n\n    maximizeButton.addEventListener('click', function () {\n        jumpToWrapperEl.classList.add('jump-to-nav-wrapper--showing');\n    });\n\n    let minimizeButton = jumpToWrapperEl.querySelector('.jump-to-nav__minimize');\n\n    minimizeButton.addEventListener('click', function () {\n        jumpToWrapperEl.classList.remove('jump-to-nav-wrapper--showing');\n    });\n\n\n    //\n    // Click outside\n    //\n    \n    document.addEventListener('click', function(event) {\n        let withinBoundaries = event.composedPath().includes(jumpToWrapperEl);\n        \n        if (jumpToWrapperEl.classList.contains('jump-to-nav-wrapper--showing')) {\n            if (!withinBoundaries) {\n                minimizeButton.click();\n            }\n        }\n    });\n\n\n    //\n    // Set height for overflow scrolling if needed\n    //\n\n    function setMaxHeight(el) {\n        let panelHeader = document.querySelector('.jump-to-nav__header');\n        let panelBody = document.querySelector('.jump-to-nav__body');\n        let topLocation = parseInt(el.getBoundingClientRect().top);\n        let jumpToHeaderHeight = parseInt(panelHeader.offsetHeight);\n        let maxHeight = (topLocation + jumpToHeaderHeight) + 40;\n\n        panelBody.style.maxHeight = 'calc(100vh - ' + maxHeight + 'px)';\n    }\n\n    setMaxHeight(jumpToWrapperEl);\n\n    \n    /* --------------------------------------------------------------------------\n        Functions\n    ---------------------------------------------------------------------------- */\n\n    //\n    // Parse options (function)\n    //\n\n    function parseOption(splitOn, optionString) {\n        return splitOn.split(optionString + ':')[1].trim();\n    }\n})();\n"]}