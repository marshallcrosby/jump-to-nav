{"version":3,"sources":["jump-to-nav.js"],"names":["jumpToElement","document","querySelectorAll","scriptLinkage","getElementById","querySelector","param","activeSections","topLocation","bottomLocation","autoClose","heading","zIndex","search","align","nest","css","urlParam","URLSearchParams","getAttribute","split","get","embeddedStyleTag","createElement","setAttribute","jumpToCSS","textContent","head","appendChild","navWrapperEl","classList","add","HTML","innerHTML","body","style","top","bottom","alignment","forEach","item","navItem","navList","searchTermsTitle","searchTermsID","index","options","title","semiColonSplit","undefined","splitOn","optionString","trim","parseOption","hasAttribute","titleReady","str","replace","match","toLowerCase","toUpperCase","camelize","linkID","linkListItem","linkTitleText","linkATag","parentElement","closest","parentListItem","push","addEventListener","event","preventDefault","targetID","scrollIntoView","behavior","history","pushState","searchEl","autoCompleteLinkage","script","onload","autoCompleteJS","autoComplete","placeHolder","data","src","resultItem","highlight","events","input","[object Object]","value","length","start","selection","detail","select","arr","searchValue","i","findIndex","click","key","remove","childUl","parentNode","lastChild","minimizeButton","el","panelHeader","panelBody","parseInt","getBoundingClientRect","jumpToHeaderHeight","offsetHeight","maxHeight","setMaxHeight","sectionsEl","navEl","observer","IntersectionObserver","items","isIntersecting","target","root","rootMargin","threshold","observe","activeSection","withinBoundaries","composedPath","includes","contains"],"mappings":"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","sourcesContent":["/*!\n    * Jump to navigation v1.3.1\n    * Need description.\n    *\n    * Copyright 2022 Marshall Crosby\n    * https://marshallcrosby.com\n*/\n\n\n/* ------------------------------------------------------------------------------\n    **TODO:\n    1. Query params\n        ✓ • Allow custom Y location\n        ✓ • Make nesting an option\n        ✓ • Allow custom z-index\n        ✓ • Allow external css\n        • Placement (left, right, top, bottom, custom)\n    ✓ 2. Click outside closes panel\n    ✓ 3. CSS dynamic max-height\n    ✓ 4. Focus nav item on current section in view\n    5. Add static site navigation\n    ✓ 6. Dynamic IDs if none\n    7. Better verbiage/names\n    8. Direction of menu opening\n-------------------------------------------------------------------------------- */\n\n\n\n(function () {\n    \"use strict\"\n    \n    const jumpToElement = document.querySelectorAll('[data-jtn-anchor]');\n\n    if (jumpToElement !== null) {\n\n        /* --------------------------------------------------------------------------\n            Query params\n        ---------------------------------------------------------------------------- */\n\n        const scriptLinkage = document.getElementById('jump-to-nav-js') || document.querySelector('script[src*=jump-to-nav]');\n        \n        const param = {\n            activeSections: null,\n            topLocation: null,\n            bottomLocation: null,\n            autoClose: null,\n            heading: null,\n            zIndex: null,\n            search: null,\n            align: null,\n            nest: null,\n            css: null\n        }\n    \n        if (scriptLinkage) {\n            const urlParam = new URLSearchParams(scriptLinkage.getAttribute('src').split('?')[1]);\n            \n            param.activeSections = urlParam.get('active-section');\n            param.topLocation = urlParam.get('top');\n            param.bottomLocation = urlParam.get('bottom');\n            param.autoClose = urlParam.get('auto-close');\n            param.heading = urlParam.get('heading');\n            param.zIndex = urlParam.get('z-index');\n            param.search = urlParam.get('search');\n            param.align = urlParam.get('align');\n            param.nest = urlParam.get('nest');\n            param.css = urlParam.get('css');\n        }\n    \n    \n        /* --------------------------------------------------------------------------\n            Render nav css\n        ---------------------------------------------------------------------------- */\n    \n        if (param.css !== 'external') {\n            const embeddedStyleTag = document.createElement('style');\n            embeddedStyleTag.setAttribute('id', 'jumpToNavStyle');\n        \n            const jumpToCSS = `//import jump-to-nav.css`;\n        \n            // Apply in page styles to style tag\n            embeddedStyleTag.textContent = jumpToCSS;\n        \n            // Add in page styles to head\n            document.head.appendChild(embeddedStyleTag);\n        }\n    \n    \n        /* --------------------------------------------------------------------------\n            Create navigation element and populate it\n        ---------------------------------------------------------------------------- */\n        \n        //\n        // Render nav elements\n        //\n    \n        const navWrapperEl = document.createElement('div');\n        navWrapperEl.classList.add('jump-to-nav');\n    \n        const HTML = `//import _jump-to-nav.html`;\n        navWrapperEl.innerHTML = HTML;\n        document.body.appendChild(navWrapperEl);\n\n        if (param.topLocation !== null) {\n            navWrapperEl.style.top = param.topLocation;\n        }\n        \n        if (param.bottomLocation !== null) {\n            navWrapperEl.style.top = 'auto';\n            navWrapperEl.style.bottom = param.bottomLocation;\n        }\n        \n        if (param.zIndex !== null) {\n            navWrapperEl.style.zIndex = param.zIndex;\n        }\n\n\n        //\n        // Alignment\n        //\n\n        if (param.align !== null) {\n            const alignment = param.align.split(',');\n\n            if (alignment !== '') {\n                alignment.forEach((item) => {\n                    navWrapperEl.classList.add('jump-to-nav--align-' + item);\n                });\n            }\n        }\n\n\n        //\n        // Set custom heading if param is set\n        //\n\n        if (param.heading !== null) {\n            const headingEl = navWrapperEl.querySelector('.jump-to-nav__heading');\n\n            headingEl.textContent = param.heading;\n        }\n    \n    \n        //\n        // Setup elements and add li and links\n        //\n    \n        const navItem = document.querySelector('.jump-to-nav__nav');\n        const navList = document.createElement('ul');\n        navList.classList.add('jump-to-nav__list');\n    \n        navItem.appendChild(navList);\n    \n        let searchTermsTitle = [];\n        let searchTermsID = [];\n        \n        jumpToElement.forEach((item, index) => {\n\n            let options = null;\n            options = {\n                title: null\n            };\n    \n            if (item.getAttribute('data-jtn-anchor') !== '') {\n                const semiColonSplit = item.getAttribute('data-jtn-anchor').split(';');\n                \n                // Assign option values if any\n                semiColonSplit.forEach((item, index) => {\n                    if (semiColonSplit[index].split('title:')[1] !== undefined) {\n                        options.title = parseOption(semiColonSplit[index], 'title');\n                    }\n                });          \n            }\n            \n            // Assign id if none is found\n            if (!item.hasAttribute('id')) {\n                let titleClean = options.title.replace(/[^a-z0-9]/gi, ' ');\n                let titleReady = camelize(titleClean);\n                item.setAttribute('id', titleReady);\n            }\n\n            const linkID = item.getAttribute('id');\n            const linkListItem = document.createElement('li');\n            \n            linkListItem.classList.add('jump-to-nav__item');\n            linkListItem.setAttribute('data-jump-id', linkID);\n                \n            const linkTitleText = (options.title !== null) ? options.title : linkID;\n            const linkATag = `\n                <a class=\"jump-to-nav__link\" href=\"#${ linkID }\">${ linkTitleText }</a>\n            `;\n    \n            linkListItem.innerHTML = linkATag;\n    \n            navList.appendChild(linkListItem);\n    \n            if (item.parentElement.closest('[data-jtn-anchor]')) {\n                let parentListItem = item.parentElement.closest('[data-jtn-anchor]');\n                parentListItem.setAttribute('data-jump-has-child', 'true');\n                linkListItem.setAttribute('data-jump-parent', parentListItem.getAttribute('id'));    \n            }\n    \n            searchTermsTitle.push(linkTitleText);\n            searchTermsID.push(linkID);\n\n        });\n\n\n        //\n        // Link clicks. Use scrollIntoView instead of browser default so I can hyjack the focus to the search element (if need-be).\n        //\n\n        const jumpToLink = navWrapperEl.querySelectorAll('.jump-to-nav__link');\n        jumpToLink.forEach((item) => {\n            item.addEventListener('click', function (event) {\n                event.preventDefault();\n                const targetID = item.getAttribute('href').replace('#', '');\n                document.getElementById(targetID).scrollIntoView({\n                    behavior: 'smooth'\n                });\n                history.pushState(null, null, `#${targetID}`);\n            });\n        });\n\n\n        const searchEl = document.querySelector('.jump-to-nav__search');\n        if (param.search !== null) {\n            // Thanks to autoComplete.js and js CDN. Project repo: https://github.com/TarekRaafat/autoComplete.js\n            const autoCompleteLinkage = `https://cdn.jsdelivr.net/npm/@tarekraafat/autocomplete.js@10.2.7/dist/autoComplete.min.js`;\n            const script = document.createElement('script');\n            script.onload = function () {\n                const autoCompleteJS = new autoComplete({\n                    placeHolder: 'Search',\n                    data: {\n                        src: searchTermsTitle\n                    },\n                    resultItem: {\n                        highlight: true,\n                    },\n                    events: {\n                        input: {\n                            focus() {\n                                if (autoCompleteJS.input.value.length) {\n                                    autoCompleteJS.start();\n                                }\n                            },\n                            selection(event) {\n                                const feedback = event.detail;\n                                \n                                const selection = feedback.selection.value;\n                                autoCompleteJS.input.value = selection;\n                                autoCompleteJS.input.select();\n                                \n                                const associatedLink = navWrapperEl.querySelector(`[href=\"#${searchTermsID[findIndex(autoCompleteJS.data.src, selection)]}\"]`)\n                                associatedLink.click();\n                            },\n                            keyup(event) {\n                                if (event.key === 'Enter' && !navWrapperEl.querySelector(`[aria-selected=\"true\"]`)) {\n                                    const firstSuggestion = navWrapperEl.querySelector(`#autoComplete_result_0`);\n                                    firstSuggestion.click();\n                                    autoCompleteJS.input.select();\n                                }\n                            },\n                        },\n                    },\n                });\n                searchEl.classList.remove('jump-to-nav__search--loading');\n            };\n            script.src = autoCompleteLinkage;\n            document.head.appendChild(script);\n        } else {\n            searchEl.remove();\n        }\n\n    \n        //\n        // Nest li(s) if jumpToElement is nested\n        //\n    \n        if (param.nest !== null) {\n            const linkChildren = navItem.querySelectorAll('[data-jump-parent]');\n    \n            linkChildren.forEach((item, index) => {\n                const parentItem = navItem.querySelector('[data-jump-id=\"' + item.getAttribute('data-jump-parent') + '\"]');\n        \n                parentItem.appendChild(item);\n            });\n        \n        \n            //\n            // Add ul inside items with children\n            //\n            \n            const nestedChildren = navItem.querySelectorAll('[data-jump-id]');\n            \n            nestedChildren.forEach((item, index) => {\n                if (item.querySelector('[data-jump-parent]')) {\n                    var childUl = document.createElement('ul');\n                    childUl.classList.add('jump-to-nav__nested-list')\n                    item.appendChild(childUl);\n                }\n            });\n        \n        \n            //\n            // Move unwrapped list items into ul\n            //\n        \n            const unwrapListItems = navItem.querySelectorAll('[data-jump-id] > [data-jump-id]');\n        \n            unwrapListItems.forEach((item, index) => {\n                const siblingUl = item.parentNode.lastChild;\n        \n                siblingUl.appendChild(item);\n            });\n        }\n    \n    \n        //\n        // Maximize / minimize buttons\n        //\n    \n        const maximizeButton = navWrapperEl.querySelector('.jump-to-nav__maximize');\n    \n        maximizeButton.addEventListener('click', function () {\n            navWrapperEl.classList.add('jump-to-nav--showing');\n        });\n    \n        const minimizeButton = navWrapperEl.querySelector('.jump-to-nav__minimize');\n    \n        minimizeButton.addEventListener('click', function () {\n            navWrapperEl.classList.remove('jump-to-nav--showing');\n        });\n    \n\n        //       \n        // Run max height function\n        //\n        setMaxHeight(navWrapperEl);\n\n\n        //\n        // Run active section function\n        //\n\n        if (param.activeSections !== null) {\n            activeSection('[data-jtn-anchor]', '.jump-to-nav');\n        }\n\n\n        //\n        // Click outside\n        //\n\n        if (param.autoClose !== null) {\n            document.addEventListener('click', function (event) {\n                const withinBoundaries = event.composedPath().includes(navWrapperEl);\n                \n                if (navWrapperEl.classList.contains('jump-to-nav--showing')) {\n                    if (!withinBoundaries) {\n                        minimizeButton.click();\n                    }\n                }\n            });\n        }\n    }\n\n    /* --------------------------------------------------------------------------\n        Functions\n    ---------------------------------------------------------------------------- */\n\n    //\n    // Parse options (function)\n    //\n\n    function parseOption(splitOn, optionString) {\n        return splitOn.split(optionString + ':')[1].trim();\n    }\n\n\n    //\n    // Set height for overflow scrolling if needed\n    //\n\n    function setMaxHeight(el) {\n        const panelHeader = document.querySelector('.jump-to-nav__header');\n        const panelBody = document.querySelector('.jump-to-nav__body');\n        const topLocation = parseInt(el.getBoundingClientRect().top);\n        const jumpToHeaderHeight = parseInt(panelHeader.offsetHeight);\n        const maxHeight = (topLocation + jumpToHeaderHeight) + 60;\n\n        panelBody.style.maxHeight = 'calc(100vh - ' + maxHeight + 'px)';\n    }\n\n\n    //\n    // Set active class on nav item if section is in view\n    //\n\n    function activeSection(sectionsEl, navEl) {\n        const jumpToElement = document.querySelectorAll(sectionsEl);\n        const navItem = document.querySelector(navEl);\n        const options = {\n            root: null,\n            rootMargin: '0px 0px -20% 0px',\n            threshold: 0.5\n        }\n        \n        const observer = new IntersectionObserver( (items, observer) => {\n            for (let i = 0; i < items.length; i++) {\n                if (items[i].isIntersecting) {\n                    navItem.querySelector('[data-jump-id=\"' + items[i].target.getAttribute('id') + '\"]').classList.add('jump-to-nav__item--active');\n                } else {\n                    navItem.querySelector('[data-jump-id=\"' + items[i].target.getAttribute('id') + '\"]').classList.remove('jump-to-nav__item--active');\n                }\n            }\n        }, options);\n\n        for (let i = 0; i < jumpToElement.length; i++) {\n            observer.observe(jumpToElement[i]);\n        }\n    }\n\n\n    //\n    // Camel case string\n    //\n\n    function camelize(str) {\n        return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function(match, index) {\n        if (+match === 0) return \"\";\n            return index === 0 ? match.toLowerCase() : match.toUpperCase();\n        });\n    }\n\n\n    //\n    // Find index of array item\n    //\n\n    function findIndex(arr, searchValue ){\n        for (let i = 0; i < arr.length; ++i) {\n            if (arr[i] === searchValue) {\n                return i;\n            }\n            }\n        }\n})();"]}