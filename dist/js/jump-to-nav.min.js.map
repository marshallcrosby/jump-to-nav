{"version":3,"sources":["jump-to-nav.js"],"names":["jumpToElement","document","querySelectorAll","length","scriptLinkage","getElementById","querySelector","param","collapseNested","activeSections","topLocation","linkCopy","bottomLocation","autoClose","heading","zIndex","search","align","nest","css","urlParam","URLSearchParams","getAttribute","split","get","embeddedStyleTag","createElement","setAttribute","jumpToCSS","textContent","head","appendChild","navWrapperEl","classList","add","HTML","innerHTML","body","documentElement","style","setProperty","top","bottom","alignment","forEach","item","navElement","navList","searchTermsTitle","searchTermsID","index","options","title","semiColonSplit","undefined","splitOn","optionString","trim","parseOption","hasAttribute","titleReady","str","replace","match","toLowerCase","toUpperCase","camelize","linkID","linkListItem","linkTitleText","linkATag","parentElement","closest","parentListItem","push","itemControls","cloneNode","remove","addEventListener","linkHash","currentUrl","window","location","href","navigator","clipboard","writeText","innerText","itemBubble","includes","setTimeout","searchEl","searchInput","autoCompleteLinkage","script","onload","autoCompleteJS","autoComplete","selector","placeHolder","data","src","resultItem","highlight","events","input","[object Object]","value","start","event","selection","detail","select","arr","searchValue","i","findIndex","click","key","focus","preventDefault","targetID","scrollIntoView","behavior","history","pushState","childUl","parentNode","lastChild","minimizeButton","el","panelHeader","panelBody","parseInt","getBoundingClientRect","jumpToHeaderHeight","offsetHeight","maxHeight","setMaxHeight","sectionsEl","navEl","observer","IntersectionObserver","items","isIntersecting","target","root","rootMargin","threshold","observe","activeSection","withinBoundaries","composedPath","contains"],"mappings":"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","sourcesContent":["/*!\n    * Jump to navigation v1.3.4\n    * Need description.\n    *\n    * Copyright 2022 Marshall Crosby\n    * https://marshallcrosby.com\n*/\n\n\n/* ------------------------------------------------------------------------------\n    **TODO:\n    1. Query params\n        ✓ • Allow custom Y location\n        ✓ • Make nesting an option\n        ✓ • Allow custom z-index\n        ✓ • Allow external css\n        • Placement (left, right, top, bottom, custom)\n    ✓ 2. Click outside closes panel\n    ✓ 3. CSS dynamic max-height\n    ✓ 4. Focus nav item on current section in view\n    5. Add static site navigation\n    ✓ 6. Dynamic IDs if none\n    7. Better verbiage/names\n    8. Direction of menu opening\n    9. Polish up a11y\n-------------------------------------------------------------------------------- */\n\n\n\n(function () {\n    \"use strict\"\n    \n    const jumpToElement = document.querySelectorAll('[data-jtn-anchor]');\n\n    if (jumpToElement.length) {\n\n        /* --------------------------------------------------------------------------\n            Query params\n        ---------------------------------------------------------------------------- */\n\n        const scriptLinkage = document.getElementById('jump-to-nav-js') || document.querySelector('script[src*=jump-to-nav]');\n        \n        const param = {\n            collapseNested: null,\n            activeSections: null,\n            topLocation: null,\n            linkCopy: null,\n            bottomLocation: null,\n            autoClose: null,\n            heading: null,\n            zIndex: null,\n            search: null,\n            align: null,\n            nest: null,\n            css: null\n        }\n    \n        if (scriptLinkage) {\n            const urlParam = new URLSearchParams(scriptLinkage.getAttribute('src').split('?')[1]);\n            \n            param.collapseNested = urlParam.get('collapse-nested');\n            param.activeSections = urlParam.get('active-section');\n            param.topLocation = urlParam.get('top');\n            param.linkCopy = urlParam.get('link-copy');\n            param.bottomLocation = urlParam.get('bottom');\n            param.autoClose = urlParam.get('auto-close');\n            param.heading = urlParam.get('heading');\n            param.zIndex = urlParam.get('z-index');\n            param.search = urlParam.get('search');\n            param.align = urlParam.get('align');\n            param.nest = urlParam.get('nest');\n            param.css = urlParam.get('css');\n        }\n    \n    \n        /* --------------------------------------------------------------------------\n            Render nav css\n        ---------------------------------------------------------------------------- */\n    \n        if (param.css !== 'external') {\n            const embeddedStyleTag = document.createElement('style');\n            embeddedStyleTag.setAttribute('id', 'jumpToNavStyle');\n        \n            const jumpToCSS = `//import jump-to-nav.css`;\n        \n            // Apply in page styles to style tag\n            embeddedStyleTag.textContent = jumpToCSS;\n        \n            // Add in page styles to head\n            document.head.appendChild(embeddedStyleTag);\n        }\n    \n    \n        /* --------------------------------------------------------------------------\n            Create navigation element and populate it\n        ---------------------------------------------------------------------------- */\n        \n        //\n        // Render nav elements\n        //\n    \n        const navWrapperEl = document.createElement('div');\n        navWrapperEl.classList.add('jump-to-nav');\n    \n        const HTML = `//import _jump-to-nav.html`;\n        navWrapperEl.innerHTML = HTML;\n        document.body.appendChild(navWrapperEl);\n\n        if (param.topLocation !== null) {\n            // navWrapperEl.style.top = param.topLocation;\n            document.documentElement.style.setProperty('--jtn-top-location', param.topLocation);\n        }\n        \n        if (param.bottomLocation !== null) {\n            navWrapperEl.style.top = 'auto';\n            navWrapperEl.style.bottom = param.bottomLocation;\n        }\n        \n        if (param.zIndex !== null) {\n            navWrapperEl.style.zIndex = param.zIndex;\n        }\n\n\n        //\n        // Alignment\n        //\n\n        if (param.align !== null) {\n            const alignment = param.align.split(',');\n\n            if (alignment !== '') {\n                alignment.forEach((item) => {\n                    navWrapperEl.classList.add('jump-to-nav--align-' + item);\n                });\n            }\n        }\n\n\n        //\n        // Set custom heading if param is set\n        //\n\n        if (param.heading !== null) {\n            const headingEl = navWrapperEl.querySelector('.jump-to-nav__heading');\n\n            headingEl.textContent = param.heading;\n        }\n    \n    \n        //\n        // Setup elements and add li and links\n        //\n    \n        const navElement = document.querySelector('.jump-to-nav__nav');\n        const navList = document.createElement('ul');\n        navList.classList.add('jump-to-nav__list');\n    \n        navElement.appendChild(navList);\n    \n        let searchTermsTitle = [];\n        let searchTermsID = [];\n        \n        jumpToElement.forEach((item, index) => {\n\n            let options = null;\n            options = {\n                title: null\n            };\n    \n            if (item.getAttribute('data-jtn-anchor') !== '') {\n                const semiColonSplit = item.getAttribute('data-jtn-anchor').split(';');\n                \n                // Assign option values if any\n                semiColonSplit.forEach((item, index) => {\n                    if (semiColonSplit[index].split('title:')[1] !== undefined) {\n                        options.title = parseOption(semiColonSplit[index], 'title');\n                    }\n                });          \n            }\n            \n            // Assign id if none is found\n            if (!item.hasAttribute('id')) {\n                let titleClean = options.title.replace(/[^a-z0-9]/gi, ' ');\n                let titleReady = camelize(titleClean);\n                item.setAttribute('id', titleReady);\n            }\n\n            const linkID = item.getAttribute('id');\n            const linkListItem = document.createElement('li');\n            \n            linkListItem.classList.add('jump-to-nav__item');\n            linkListItem.setAttribute('data-jump-id', linkID);\n                \n            const linkTitleText = (options.title !== null) ? options.title : linkID;\n            const linkATag = `\n                <a class=\"jump-to-nav__link\" href=\"#${ linkID }\">\n                    <span>${linkTitleText}</span>\n                </a>\n            `;\n    \n            linkListItem.innerHTML = linkATag;\n    \n            navList.appendChild(linkListItem);\n    \n            if (item.parentElement.closest('[data-jtn-anchor]')) {\n                let parentListItem = item.parentElement.closest('[data-jtn-anchor]');\n                parentListItem.setAttribute('data-jump-has-child', 'true');\n                linkListItem.setAttribute('data-jump-parent', parentListItem.getAttribute('id'));    \n            }\n    \n            searchTermsTitle.push(linkTitleText);\n            searchTermsID.push(linkID);\n\n        });\n\n        \n        //\n        // Add copy button to each anchor link\n        //\n\n        const itemControls = navElement.querySelector('.jump-to-nav__item-controls');\n        \n        if (param.linkCopy !== null) {\n            const navListItem = navList.querySelectorAll('li');\n            \n            navListItem.forEach((item) => {\n                item.appendChild(itemControls.cloneNode(true));\n            });\n            \n            itemControls.remove();\n\n            const linkCopyButtonEl = navList.querySelectorAll('.jump-to-nav__copy-button');\n\n            linkCopyButtonEl.forEach((item) => {\n                item.addEventListener('click', () => {\n                    const linkHash = item.closest('.jump-to-nav__item').querySelector('.jump-to-nav__link').getAttribute('href');\n                    const currentUrl = window.location.href.split('#');\n                   \n                    navigator.clipboard.writeText(currentUrl[0] + linkHash);\n                    item.closest('.jump-to-nav__item').querySelector('.jump-to-nav__copy-bubble').innerText = 'Copied';\n                });\n\n                item.addEventListener('mouseout', function () {\n                    let itemBubble = item.closest('.jump-to-nav__item').querySelector('.jump-to-nav__copy-bubble');\n                    let itemBubbleText = itemBubble.innerText.toLowerCase();\n                    \n                    if (itemBubbleText.includes('copied')) {\n                        setTimeout(function () {\n                            itemBubble.innerText = 'Copy link';\n                        }, 100);\n                    }\n                });\n            });\n        } else {\n            itemControls.remove();\n        }\n\n        \n        const searchEl = document.querySelector('.jump-to-nav__search');\n        const searchInput = searchEl.querySelector('.jump-to-nav__search-input');\n\n        if (param.search !== null) {\n            \n            // Thanks to autoComplete.js. Project repo: https://github.com/TarekRaafat/autoComplete.js\n            const autoCompleteLinkage = `https://cdn.jsdelivr.net/npm/@tarekraafat/autocomplete.js@10.2.7/dist/autoComplete.min.js`;\n            const script = document.createElement('script');\n            script.onload = function () {\n                const autoCompleteJS = new autoComplete({\n                    selector: \"#jumpToNavAutoComplete\",\n                    placeHolder: 'Search',\n                    data: {\n                        src: searchTermsTitle\n                    },\n                    resultItem: {\n                        highlight: true,\n                    },\n                    events: {\n                        input: {\n                            focus() {\n                                if (autoCompleteJS.input.value.length) {\n                                    autoCompleteJS.start();\n                                }\n                            },\n                            selection(event) {\n                                const feedback = event.detail;\n                                \n                                const selection = feedback.selection.value;\n                                autoCompleteJS.input.value = selection;\n                                autoCompleteJS.input.select();\n                                \n                                const associatedLink = navWrapperEl.querySelector(`[href=\"#${searchTermsID[findIndex(autoCompleteJS.data.src, selection)]}\"]`)\n                                associatedLink.click();\n                            },\n                            keyup(event) {\n                                if (event.key === 'Enter' && !navWrapperEl.querySelector(`[aria-selected=\"true\"]`)) {\n                                    const firstSuggestion = navWrapperEl.querySelector(`#autoComplete_result_0`);\n                                    firstSuggestion.click();\n                                    autoCompleteJS.input.select();\n                                }\n                            },\n                        },\n                    },\n                });\n                \n                searchInput.addEventListener('input', () => {\n                    if (searchInput && searchInput.value) {\n                        searchEl.classList.add('jump-to-nav__search--has-value');\n                    } else {\n                        searchEl.classList.remove('jump-to-nav__search--has-value');\n                    }\n                });\n\n                const searchClear = searchEl.querySelector('.jump-to-nav__search-clear');\n                searchClear.addEventListener('click', () => {\n                    searchInput.value = '';\n                    searchEl.classList.remove('jump-to-nav__search--has-value');\n                    searchInput.focus();\n                })\n\n                searchEl.classList.remove('jump-to-nav__search--loading');\n            };\n            script.src = autoCompleteLinkage;\n            document.head.appendChild(script);\n        } else {\n            searchEl.remove();\n        }\n\n        //\n        // Link clicks. Use scrollIntoView instead of browser default so I can hyjack the focus to the search element (if need-be).\n        //\n\n        const jumpToLink = navWrapperEl.querySelectorAll('.jump-to-nav__link');\n        \n        jumpToLink.forEach((item) => {\n            item.addEventListener('click', function (event) {\n                event.preventDefault();\n                const targetID = item.getAttribute('href').replace('#', '');\n                \n                document.getElementById(targetID).scrollIntoView({\n                    behavior: 'smooth'\n                });\n                \n                history.pushState(null, null, `#${targetID}`);\n                \n                if (searchEl) {\n                    searchInput.value = item.innerText;\n                    searchEl.classList.add('jump-to-nav__search--has-value');\n                }\n            });\n        });\n\n    \n        //\n        // Nest li(s) if jumpToElement is nested\n        //\n    \n        if (param.nest !== null) {\n            const linkChildren = navElement.querySelectorAll('[data-jump-parent]');\n    \n            linkChildren.forEach((item, index) => {\n                const parentItem = navElement.querySelector('[data-jump-id=\"' + item.getAttribute('data-jump-parent') + '\"]');\n        \n                parentItem.appendChild(item);\n            });\n        \n        \n            //\n            // Add ul inside items with children\n            //\n            \n            const nestedChildren = navElement.querySelectorAll('[data-jump-id]');\n            \n            nestedChildren.forEach((item, index) => {\n                if (item.querySelector('[data-jump-parent]')) {\n                    var childUl = document.createElement('ul');\n                    childUl.classList.add('jump-to-nav__nested-list')\n                    item.appendChild(childUl);\n                }\n            });\n        \n        \n            //\n            // Move unwrapped list items into ul\n            //\n        \n            const unwrapListItems = navElement.querySelectorAll('[data-jump-id] > [data-jump-id]');\n        \n            unwrapListItems.forEach((item, index) => {\n                const siblingUl = item.parentNode.lastChild;\n        \n                siblingUl.appendChild(item);\n            });\n        }\n    \n    \n        //\n        // Maximize / minimize buttons\n        //\n    \n        const maximizeButton = navWrapperEl.querySelector('.jump-to-nav__maximize');\n    \n        maximizeButton.addEventListener('click', function () {\n            navWrapperEl.classList.add('jump-to-nav--showing');\n        });\n    \n        const minimizeButton = navWrapperEl.querySelector('.jump-to-nav__minimize');\n    \n        minimizeButton.addEventListener('click', function () {\n            navWrapperEl.classList.remove('jump-to-nav--showing');\n        });\n    \n\n        //       \n        // Run max height function\n        //\n        setMaxHeight(navWrapperEl);\n\n\n        //\n        // Run active section function\n        //\n\n        if (param.activeSections !== null) {\n            activeSection('[data-jtn-anchor]', '.jump-to-nav');\n        }\n\n\n        //\n        // Click outside\n        //\n\n        if (param.autoClose !== null) {\n            document.addEventListener('click', function (event) {\n                const withinBoundaries = event.composedPath().includes(navWrapperEl);\n                \n                if (navWrapperEl.classList.contains('jump-to-nav--showing')) {\n                    if (!withinBoundaries) {\n                        minimizeButton.click();\n                    }\n                }\n            });\n        }\n\n        if (param.collapseNested !== null && param.activeSections !== null) {\n            navWrapperEl.classList.add('jump-to-nav--collapse-nested');\n        }\n    }\n\n    /* --------------------------------------------------------------------------\n        Functions\n    ---------------------------------------------------------------------------- */\n\n    //\n    // Parse options (function)\n    //\n\n    function parseOption(splitOn, optionString) {\n        return splitOn.split(optionString + ':')[1].trim();\n    }\n\n\n    //\n    // Set height for overflow scrolling if needed\n    //\n\n    function setMaxHeight(el) {\n        const panelHeader = document.querySelector('.jump-to-nav__header');\n        const panelBody = document.querySelector('.jump-to-nav__body');\n        const topLocation = parseInt(el.getBoundingClientRect().top);\n        const jumpToHeaderHeight = parseInt(panelHeader.offsetHeight);\n        const maxHeight = (topLocation + jumpToHeaderHeight) + 60;\n\n        panelBody.style.maxHeight = 'calc(100vh - ' + maxHeight + 'px)';\n    }\n\n\n    //\n    // Set active class on nav item if section is in view\n    //\n\n    function activeSection(sectionsEl, navEl) {\n        const jumpToElement = document.querySelectorAll(sectionsEl);\n        const navElement = document.querySelector(navEl);\n        const options = {\n            root: null,\n            rootMargin: '0px 0px -20%',\n            threshold: 0.5\n        }\n        \n        const observer = new IntersectionObserver( (items, observer) => {\n            for (let i = 0; i < items.length; i++) {\n                if (!items[i].isIntersecting) {\n                    navElement.querySelector('[data-jump-id=\"' + items[i].target.getAttribute('id') + '\"]').classList.remove('jump-to-nav__item--active');\n                } else {\n                    navElement.querySelector('[data-jump-id=\"' + items[i].target.getAttribute('id') + '\"]').classList.add('jump-to-nav__item--active');\n                }\n            }\n        }, options);\n\n        for (let i = 0; i < jumpToElement.length; i++) {\n            observer.observe(jumpToElement[i]);\n        }\n    }\n\n\n    //\n    // Camel case string\n    //\n\n    function camelize(str) {\n        return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function(match, index) {\n        if (+match === 0) return \"\";\n            return index === 0 ? match.toLowerCase() : match.toUpperCase();\n        });\n    }\n\n\n    //\n    // Find index of array item\n    //\n\n    function findIndex(arr, searchValue ){\n        for (let i = 0; i < arr.length; ++i) {\n            if (arr[i] === searchValue) {\n                return i;\n            }\n        }\n    }\n})();"]}