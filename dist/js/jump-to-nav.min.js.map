{"version":3,"sources":["jump-to-nav.js"],"names":["jumpToElement","document","querySelectorAll","length","Element","prototype","setAttributes","attrs","key","this","setAttribute","scriptLinkage","getElementById","querySelector","param","collapseNested","activeSections","topLocation","linkCopy","bottomLocation","autoClose","heading","zIndex","search","showSearchAfter","searchFocus","align","nest","css","urlParam","URLSearchParams","getAttribute","split","get","embeddedStyleTag","createElement","jumpToCSS","textContent","head","appendChild","navWrapperEl","classList","add","HTML","innerHTML","body","documentElement","style","setProperty","top","bottom","alignment","forEach","item","navElement","navList","searchTermsTitle","searchTermsID","index","options","title","semiColonSplit","undefined","parseOption","hasAttribute","titleReady","camelize","replace","linkID","linkListItem","linkTitleText","linkATag","parentElement","closest","parentListItem","push","tempItemControls","navListItem","cloneNode","remove","addEventListener","linkHash","currentUrl","window","location","href","navigator","clipboard","writeText","innerText","itemBubble","toLowerCase","includes","setTimeout","searchEl","searchInput","navItem","parseInt","autoCompleteLinkage","script","onload","autoCompleteJS","autoComplete","selector","placeHolder","data","src","resultItem","highlight","events","input","[object Object]","value","start","event","selection","detail","select","arr","searchValue","i","findIndex","click","focus","preventDefault","targetID","parent","child","parentRect","getBoundingClientRect","childRect","parentViewableArea","height","clientHeight","width","clientWidth","scrollTop","scrollBottom","Math","abs","scrollParentToChild","scrollIntoView","behavior","history","pushState","parentItem","childUl","parentNode","lastChild","expandButton","role","aria-label","aria-expanded","tabindex","minimizeButton","el","panelHeader","panelBody","jumpToHeaderHeight","offsetHeight","maxHeight","setMaxHeight","sections","jumpToMenu","menuLinks","sectionMargin","currentActive","removeAllActive","getElementsByClassName","makeActive","link","newActive","current","reverse","section","scrollY","offsetTop","withinBoundaries","composedPath","contains","showGroup","showSelect","optionTitle","optionID","option","itemChild","id","showCurrentSectionID","display","itemNavItems","code","splitOn","optionString","trim","str","match","toUpperCase"],"mappings":"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","sourcesContent":["/*!\n    * Jump to navigation v1.4.1\n    * Need description.\n    *\n    * Copyright 2022 Marshall Crosby\n    * https://marshallcrosby.com\n*/\n\n\n/* ------------------------------------------------------------------------------\n    **TODO:\n    1. Query params\n        ✓ • Allow custom Y location\n        ✓ • Make nesting an option\n        ✓ • Allow custom z-index\n        ✓ • Allow external css\n        • Placement (left, right, top, bottom, custom)\n    ✓ 2. Click outside closes panel\n    ✓ 3. CSS dynamic max-height\n    ✓ 4. Focus nav item on current section in view\n    5. Add static site navigation\n    ✓ 6. Dynamic IDs if none\n    7. Better verbiage/names\n    8. Direction of menu opening\n    9. Polish up a11y\n-------------------------------------------------------------------------------- */\n\n\n\n(function () {\n    \"use strict\"\n    \n    const jumpToElement = document.querySelectorAll('[data-jtn-anchor]');\n\n    if (jumpToElement.length) {\n\n        Element.prototype.setAttributes = function (attrs) {\n            for(let key in attrs) {\n                this.setAttribute(key, attrs[key]);\n            }\n        };\n\n        /* --------------------------------------------------------------------------\n            Query params\n        ---------------------------------------------------------------------------- */\n\n        const scriptLinkage = document.getElementById('jump-to-nav-js') || document.querySelector('script[src*=jump-to-nav]');\n        \n        const param = {\n            collapseNested: null,\n            activeSections: null,\n            topLocation: null,\n            linkCopy: null,\n            bottomLocation: null,\n            autoClose: null,\n            heading: null,\n            zIndex: null,\n            search: null,\n            showSearchAfter: null,\n            searchFocus: null,\n            align: null,\n            nest: null,\n            css: null\n        }\n    \n        if (scriptLinkage) {\n            const urlParam = new URLSearchParams(scriptLinkage.getAttribute('src').split('?')[1]);\n            \n            param.collapseNested = urlParam.get('collapse-nested');\n            param.activeSections = urlParam.get('active-section');\n            param.topLocation = urlParam.get('top');\n            param.linkCopy = urlParam.get('link-copy');\n            param.bottomLocation = urlParam.get('bottom');\n            param.autoClose = urlParam.get('auto-close');\n            param.heading = urlParam.get('heading');\n            param.zIndex = urlParam.get('z-index');\n            param.search = urlParam.get('search');\n            param.showSearchAfter = urlParam.get('show-search-after');\n            param.searchFocus = urlParam.get('search-focus');\n            param.align = urlParam.get('align');\n            param.nest = urlParam.get('nest');\n            param.css = urlParam.get('css');\n        }\n    \n    \n        /* --------------------------------------------------------------------------\n            Render nav css\n        ---------------------------------------------------------------------------- */\n    \n        if (param.css !== 'external') {\n            const embeddedStyleTag = document.createElement('style');\n            embeddedStyleTag.setAttribute('id', 'jumpToNavStyle');\n        \n            const jumpToCSS = `//import jump-to-nav.css`;\n        \n            // Apply in page styles to style tag\n            embeddedStyleTag.textContent = jumpToCSS;\n        \n            // Add in page styles to head\n            document.head.appendChild(embeddedStyleTag);\n        }\n    \n    \n        /* --------------------------------------------------------------------------\n            Create navigation element and populate it\n        ---------------------------------------------------------------------------- */\n        \n        //\n        // Render nav elements\n        //\n    \n        const navWrapperEl = document.createElement('div');\n        navWrapperEl.classList.add('jump-to-nav');\n    \n        const HTML = `//import _jump-to-nav.html`;\n        navWrapperEl.innerHTML = HTML;\n        document.body.appendChild(navWrapperEl);\n\n        if (param.topLocation !== null) {\n            document.documentElement.style.setProperty('--jtn-top-location', param.topLocation);\n        }\n        \n        if (param.bottomLocation !== null) {\n            navWrapperEl.style.top = 'auto';\n            navWrapperEl.style.bottom = param.bottomLocation;\n        }\n        \n        if (param.zIndex !== null) {\n            navWrapperEl.style.zIndex = param.zIndex;\n        }\n\n\n        //\n        // Alignment\n        //\n\n        if (param.align !== null) {\n            const alignment = param.align.split(',');\n\n            if (alignment !== '') {\n                alignment.forEach((item) => {\n                    navWrapperEl.classList.add('jump-to-nav--align-' + item);\n                });\n            }\n        }\n\n\n        //\n        // Set custom heading if param is set\n        //\n\n        if (param.heading !== null) {\n            const headingEl = navWrapperEl.querySelector('.jump-to-nav__heading');\n\n            headingEl.textContent = param.heading;\n        }\n    \n    \n        //\n        // Setup elements and add li and links\n        //\n    \n        const navElement = document.querySelector('.jump-to-nav__nav');\n        const navList = document.createElement('ul');\n        navList.classList.add('jump-to-nav__list');\n    \n        navElement.appendChild(navList);\n    \n        let searchTermsTitle = [];\n        let searchTermsID = [];\n        \n        jumpToElement.forEach((item, index) => {\n\n            let options = null;\n            options = {\n                title: null\n            };\n    \n            if (item.getAttribute('data-jtn-anchor') !== '') {\n                const semiColonSplit = item.getAttribute('data-jtn-anchor').split(';');\n                \n                // Assign option values if any\n                semiColonSplit.forEach((item, index) => {\n                    if (semiColonSplit[index].split('title:')[1] !== undefined) {\n                        options.title = parseOption(semiColonSplit[index], 'title');\n                    }\n                });          \n            }\n            \n            // Assign id if none is found\n            if (!item.hasAttribute('id')) {\n                let titleClean = options.title.replace(/[^a-z0-9]/gi, ' ');\n                let titleReady = camelize(titleClean);\n                item.setAttribute('id', titleReady);\n            }\n\n            const linkID = item.getAttribute('id');\n            const linkListItem = document.createElement('li');\n            \n            linkListItem.classList.add('jump-to-nav__item');\n            linkListItem.setAttribute('data-jump-id', linkID);\n                \n            const linkTitleText = (options.title !== null) ? options.title : linkID;\n            const linkATag = `\n                <a class=\"jump-to-nav__link\" href=\"#${ linkID }\">\n                    <span>${linkTitleText}</span>\n                </a>\n            `;\n    \n            linkListItem.innerHTML = linkATag;\n    \n            navList.appendChild(linkListItem);\n    \n            if (item.parentElement.closest('[data-jtn-anchor]')) {\n                let parentListItem = item.parentElement.closest('[data-jtn-anchor]');\n                parentListItem.setAttribute('data-jump-has-child', 'true');\n                linkListItem.setAttribute('data-jump-parent', parentListItem.getAttribute('id'));    \n            }\n    \n            searchTermsTitle.push(linkTitleText);\n            searchTermsID.push(linkID);\n\n        });\n\n\n        //\n        // Apply controls div\n        //\n\n        const tempItemControls = navElement.querySelector('.jump-to-nav__item-controls');\n        const navListItem = navList.querySelectorAll('li');\n\n        if (param.linkCopy !== null || param.collapseNested !== null) {\n            \n            navListItem.forEach((item) => {\n                item.appendChild(tempItemControls.cloneNode(true));\n            });\n\n            tempItemControls.remove();\n        } else {\n            tempItemControls.remove();\n        }\n\n        \n        //\n        // Add copy button to each anchor link\n        //\n        \n        if (param.linkCopy !== null) {\n\n            const linkCopyButtonEl = navList.querySelectorAll('.jump-to-nav__copy-button');\n\n            linkCopyButtonEl.forEach((item) => {\n                item.addEventListener('click', () => {\n                    const linkHash = item.closest('.jump-to-nav__item').querySelector('.jump-to-nav__link').getAttribute('href');\n                    const currentUrl = window.location.href.split('#');\n                   \n                    navigator.clipboard.writeText(currentUrl[0] + linkHash);\n                    item.closest('.jump-to-nav__item').querySelector('.jump-to-nav__copy-bubble').innerText = 'Copied';\n                });\n\n                item.addEventListener('mouseout', function () {\n                    let itemBubble = item.closest('.jump-to-nav__item').querySelector('.jump-to-nav__copy-bubble');\n                    let itemBubbleText = itemBubble.innerText.toLowerCase();\n                    \n                    if (itemBubbleText.includes('copied')) {\n                        setTimeout(function () {\n                            itemBubble.innerText = 'Copy link';\n                        }, 100);\n                    }\n                });\n            });\n        } else {\n            navElement.querySelectorAll('.jump-to-nav__copy-button, .jump-to-nav__copy-bubble').forEach(item => item.remove());\n        }\n\n        \n        const searchEl = document.querySelector('.jump-to-nav__search');\n        const searchInput = searchEl.querySelector('.jump-to-nav__search-input');\n        const navItem = navElement.querySelectorAll('.jump-to-nav__item');\n\n        if (param.search !== null || navItem.length >= parseInt(param.showSearchAfter) ) {\n            \n            // Thanks to autoComplete.js. Project repo: https://github.com/TarekRaafat/autoComplete.js\n            const autoCompleteLinkage = `https://cdn.jsdelivr.net/npm/@tarekraafat/autocomplete.js@10.2.7/dist/autoComplete.min.js`;\n            const script = document.createElement('script');\n            \n            script.onload = function () {\n                const autoCompleteJS = new autoComplete({\n                    selector: \"#jumpToNavAutoComplete\",\n                    placeHolder: 'Search',\n                    data: {\n                        src: searchTermsTitle\n                    },\n                    resultItem: {\n                        highlight: true,\n                    },\n                    events: {\n                        input: {\n                            focus() {\n                                if (autoCompleteJS.input.value.length) {\n                                    autoCompleteJS.start();\n                                }\n                            },\n                            selection(event) {\n                                const feedback = event.detail;\n                                \n                                const selection = feedback.selection.value;\n                                autoCompleteJS.input.value = selection;\n                                autoCompleteJS.input.select();\n                                \n                                const associatedLink = navWrapperEl.querySelector(`[href=\"#${searchTermsID[findIndex(autoCompleteJS.data.src, selection)]}\"]`)\n                                associatedLink.click();\n                            },\n                            keyup(event) {\n                                if (event.key === 'Enter' && !navWrapperEl.querySelector(`[aria-selected=\"true\"]`)) {\n                                    const firstSuggestion = navWrapperEl.querySelector(`#autoComplete_result_0`);\n                                    firstSuggestion.click();\n                                    autoCompleteJS.input.select();\n                                }\n                            },\n                        },\n                    },\n                });\n                \n                searchInput.addEventListener('input', () => {\n                    if (searchInput && searchInput.value) {\n                        searchEl.classList.add('jump-to-nav__search--has-value');\n                    } else {\n                        searchEl.classList.remove('jump-to-nav__search--has-value');\n                    }\n                });\n\n                const searchClear = searchEl.querySelector('.jump-to-nav__search-clear');\n                searchClear.addEventListener('click', () => {\n                    searchInput.value = '';\n                    searchEl.classList.remove('jump-to-nav__search--has-value');\n                    searchInput.focus();\n                })\n\n                searchEl.classList.remove('jump-to-nav__search--loading');\n            };\n            script.src = autoCompleteLinkage;\n            document.head.appendChild(script);\n        } else {\n            searchEl.remove();\n        }\n\n        //\n        // Link clicks. Use scrollIntoView instead of browser default so I can hyjack the focus to the search element (if need-be).\n        //\n\n        const jumpToLink = navWrapperEl.querySelectorAll('.jump-to-nav__link');\n        \n        jumpToLink.forEach((item) => {\n            item.addEventListener('click', function (event) {\n                event.preventDefault();\n                const targetID = item.getAttribute('href').replace('#', '');\n                \n                scrollParentToChild(document.querySelector('.jump-to-nav__body'), item);\n\n                document.getElementById(targetID).scrollIntoView({\n                    behavior: 'smooth'\n                });\n\n                history.pushState(null, null, `#${targetID}`);\n                \n                if (searchEl) {\n                    searchInput.value = item.innerText;\n                    searchEl.classList.add('jump-to-nav__search--has-value');\n                }\n            });\n        });\n\n    \n        //\n        // Nest li(s) if jumpToElement is nested\n        //\n    \n        if (param.nest !== null) {\n            const linkChildren = navElement.querySelectorAll('[data-jump-parent]');\n    \n            linkChildren.forEach((item, index) => {\n                const parentItem = navElement.querySelector('[data-jump-id=\"' + item.getAttribute('data-jump-parent') + '\"]');\n                parentItem.classList.add('jump-to-nav__item--parent');\n        \n                parentItem.appendChild(item);\n            });\n        \n        \n            //\n            // Add ul inside items with children\n            //\n            \n            const nestedChildren = navElement.querySelectorAll('[data-jump-id]');\n            \n            nestedChildren.forEach((item, index) => {\n                if (item.querySelector('[data-jump-parent]')) {\n                    \n                    const childUl = document.createElement('ul');\n                    childUl.classList.add('jump-to-nav__nested-list')\n                    item.appendChild(childUl);\n                }\n            });\n        \n        \n            //\n            // Move unwrapped list items into ul\n            //\n        \n            const unwrapListItems = navElement.querySelectorAll('[data-jump-id] > [data-jump-id]');\n        \n            unwrapListItems.forEach((item, index) => {\n                const siblingUl = item.parentNode.lastChild;\n        \n                siblingUl.appendChild(item);\n            });\n\n\n            if (param.collapseNested !== null) {\n\n                //\n                // Children expand button\n                //\n    \n                const childrenControls = navElement.querySelectorAll('.jump-to-nav__item--parent > .jump-to-nav__item-controls');\n                \n                childrenControls.forEach((item) => {\n                    const expandButton = document.createElement('div');\n                    expandButton.classList.add('jump-to-nav__expand-button');\n                    expandButton.setAttributes({\n                        'role': 'button',\n                        'aria-label': 'Show',\n                        'aria-expanded': 'false',\n                        'tabindex': '0'\n                    });\n                    expandButton.innerHTML = /* html */`\n                        <svg version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 14.1 8.5\" style=\"enable-background:new 0 0 14.1 8.5;\" xml:space=\"preserve\">\n                            <polygon points=\"7.1,8.5 14.1,1.4 12.7,0 7.1,5.7 1.4,0 0,1.4 7.1,8.5 \"/>\n                        </svg>\n                    `;\n                    \n                    item.appendChild(expandButton);\n    \n                    expandButton.addEventListener('click', function () {\n                        if (this.getAttribute('aria-expanded') === 'false') {\n                            this.setAttribute('aria-expanded', 'true');\n                            this\n                                .closest('.jump-to-nav__item')\n                                .querySelector('.jump-to-nav__nested-list')\n                                .classList.add('jump-to-nav__nested-list--showing');\n                        } else {\n                            this.setAttribute('aria-expanded', 'false');\n                            this\n                                .closest('.jump-to-nav__item')\n                                .querySelector('.jump-to-nav__nested-list')\n                                .classList.remove('jump-to-nav__nested-list--showing');\n                        }\n                    });\n                });\n\n                navWrapperEl.classList.add('jump-to-nav--collapse-nested');\n            }\n        }\n    \n    \n        //\n        // Maximize / minimize buttons\n        //\n    \n        const maximizeButton = navWrapperEl.querySelector('.jump-to-nav__maximize');\n    \n        maximizeButton.addEventListener('click', function () {\n            navWrapperEl.classList.add('jump-to-nav--showing');\n\n            if (param.searchFocus !== null) {\n                setTimeout(function () {\n                    searchInput.value = '';\n                    searchInput.focus();\n                }, 100);\n            }\n        });\n    \n        const minimizeButton = navWrapperEl.querySelector('.jump-to-nav__minimize');\n    \n        minimizeButton.addEventListener('click', function () {\n            navWrapperEl.classList.remove('jump-to-nav--showing');\n        });\n    \n\n        //       \n        // Run max height function\n        //\n\n        setMaxHeight(navWrapperEl);\n\n\n        //\n        // Run active section function\n        //\n\n        if (param.activeSections !== null) {\n\n            // Active section. Can't use Bootstrap 5 scrollspy since it's buggy\n            const sections = document.querySelectorAll('[data-jtn-anchor]');\n            const jumpToMenu = document.querySelector('.jump-to-nav__nav');\n            const menuLinks = jumpToMenu.querySelectorAll('a');\n            const sectionMargin = 200;\n            let currentActive = 0;\n            \n            const removeAllActive = () => {\n                const currentActive = jumpToMenu.getElementsByClassName('jump-to-nav__item--active')[0];\n                if (currentActive) {\n                    currentActive.classList.remove('jump-to-nav__item--active');\n                }\n            };\n\n            const makeActive = (link) => {\n                const newActive = menuLinks[link];\n                if (newActive) {\n                    newActive.classList.add('jump-to-nav__item--active');\n                }\n            };\n\n            // listen for scroll events\n            window.addEventListener('scroll', () => {\n                const current = sections.length - [...sections].reverse().findIndex((section) => window.scrollY >= section.offsetTop - sectionMargin) - 1;\n            \n                if (current !== currentActive) {\n                    removeAllActive();\n                    currentActive = current;\n                    makeActive(current);\n                }\n            });\n        }\n\n\n        //\n        // Click outside\n        //\n\n        if (param.autoClose !== null) {\n            document.addEventListener('click', function (event) {\n                const withinBoundaries = event.composedPath().includes(navWrapperEl);\n                \n                if (navWrapperEl.classList.contains('jump-to-nav--showing')) {\n                    if (!withinBoundaries) {\n                        minimizeButton.click();\n                    }\n                }\n            });\n        }\n\n        \n        //\n        // Group sorting\n        //\n\n        const showGroup = document.querySelectorAll('[data-jtn-show-group]');\n        if (showGroup.length) {\n            const showSelect = navWrapperEl.querySelector('.jump-to-nav__select');\n    \n            showGroup.forEach((item) => {\n                const optionTitle = parseOption(item.getAttribute('data-jtn-show-group'), 'title');\n                const optionID = camelize('section' + optionTitle.replace(/[^a-z0-9]/gi, ' '));\n                \n                item.setAttribute('id', optionID);\n                \n                const option = document.createElement('option');\n                option.value = optionID;\n                option.innerText = optionTitle;\n                showSelect.add(option);\n\n                const childSection = item.querySelectorAll('[data-jtn-anchor]');\n                childSection.forEach((itemChild) => {\n                    navWrapperEl\n                        .querySelector('[data-jump-id=\"' + itemChild.id + '\"]')\n                        .setAttribute('data-jtn-show-group-parent', optionID);\n                });\n            });\n    \n            showSelect.addEventListener('change', function() {\n                const showCurrentSectionID = this.value;\n                \n                showGroup.forEach((item) => {\n                    item.style.display = '';\n    \n                    if (item.id !== showCurrentSectionID) {\n                        item.style.display = 'none';\n                    }\n    \n                    if (showCurrentSectionID === 'showAll') {\n                        item.style.display = '';\n                    }\n\n                    const topLevelNavItems = navWrapperEl.querySelectorAll('[data-jtn-show-group-parent]');\n                    topLevelNavItems.forEach((itemNavItems) => {\n                        itemNavItems.style.display = '';\n\n                        if (itemNavItems.getAttribute('data-jtn-show-group-parent') !== showCurrentSectionID) {\n                            itemNavItems.style.display = 'none';\n                        }\n\n                        if (showCurrentSectionID === 'showAll') {\n                            itemNavItems.style.display = '';\n                        }\n                    });\n                });\n            });\n\n        } else {\n            navWrapperEl.querySelector('.jump-to-nav__showonly').remove();\n        }\n\n\n        //\n        // Make div with role=button act like an actual button for a11y reasons\n        //\n        \n        document.querySelectorAll('.jump-to-nav__maximize, .jump-to-nav__minimize, .jump-to-nav__search-clear, .jump-to-nav__copy-button, .jump-to-nav__expand-button')\n            .forEach((item) => {\n                item.addEventListener('keydown', function (event) {\n                    if (event.key === 'Enter' || event.code === 'Space') {\n                        event.preventDefault();\n                        this.click();\n                    }\n                });\n            });\n\n\n        //\n        // Remove un-needed item controls\n        //\n\n        if (\n            param.linkCopy === null &&\n            param.collapseNested !== null\n        ) {\n            navWrapperEl.querySelectorAll('.jump-to-nav__item:not(.jump-to-nav__item--parent) .jump-to-nav__item-controls').forEach(item => item.remove())\n        }\n    }\n\n    /* --------------------------------------------------------------------------\n        Functions\n    ---------------------------------------------------------------------------- */\n\n    //\n    // Parse options (function)\n    //\n\n    function parseOption(splitOn, optionString) {\n        return splitOn.split(optionString + ':')[1].trim();\n    }\n\n\n    //\n    // Set height for overflow scrolling if needed\n    //\n\n    function setMaxHeight(el) {\n        const panelHeader = document.querySelector('.jump-to-nav__header');\n        const panelBody = document.querySelector('.jump-to-nav__body');\n        const topLocation = parseInt(el.getBoundingClientRect().top);\n        const jumpToHeaderHeight = parseInt(panelHeader.offsetHeight);\n        const maxHeight = (topLocation + jumpToHeaderHeight) + 60;\n\n        panelBody.style.maxHeight = 'calc(100vh - ' + maxHeight + 'px)';\n    }\n\n\n    //\n    // Set active class on nav item if section is in view\n    //\n\n    function activeSection(sectionsEl, navEl) {\n        const jumpToElement = document.querySelectorAll(sectionsEl);\n        const navElement = document.querySelector(navEl);\n        const options = {\n            root: null,\n            rootMargin: '0px 0px -20%',\n            threshold: 0.5\n        }\n        \n        const observer = new IntersectionObserver( (items, observer) => {\n            for (let i = 0; i < items.length; i++) {\n                if (!items[i].isIntersecting) {\n                    navElement.querySelector('[data-jump-id=\"' + items[i].target.getAttribute('id') + '\"]').classList.remove('jump-to-nav__item--active');\n                } else {\n                    navElement.querySelector('[data-jump-id=\"' + items[i].target.getAttribute('id') + '\"]').classList.add('jump-to-nav__item--active');\n                }\n            }\n        }, options);\n\n        for (let i = 0; i < jumpToElement.length; i++) {\n            observer.observe(jumpToElement[i]);\n        }\n    }\n\n\n    //\n    // Camel case string\n    //\n\n    function camelize(str) {\n        return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function(match, index) {\n        if (+match === 0) return \"\";\n            return index === 0 ? match.toLowerCase() : match.toUpperCase();\n        });\n    }\n\n\n    //\n    // Find index of array item\n    //\n\n    function findIndex(arr, searchValue ){\n        for (let i = 0; i < arr.length; ++i) {\n            if (arr[i] === searchValue) {\n                return i;\n            }\n        }\n    }\n\n\n    //\n    // Scroll to inside div\n    //\n\n    function scrollParentToChild(parent, child) {\n        const parentRect = parent.getBoundingClientRect();\n        const childRect = child.getBoundingClientRect();\n        \n        const parentViewableArea = {\n            height: parent.clientHeight,\n            width: parent.clientWidth\n        };\n      \n        const isViewable = (childRect.top >= parentRect.top) && (childRect.bottom <= parentRect.top + parentViewableArea.height);\n      \n        if (!isViewable) {\n            const scrollTop = childRect.top - parentRect.top;\n            const scrollBottom = childRect.bottom - parentRect.bottom;\n            \n            if (Math.abs(scrollTop) < Math.abs(scrollBottom)) {\n                parent.scrollTop += scrollTop - 60;\n            } else {\n                parent.scrollTop += scrollBottom + 60;\n            }\n        }\n    }\n})();"]}