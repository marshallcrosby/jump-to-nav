{"version":3,"sources":["jump-to-nav.js"],"names":["jumpToSections","document","querySelectorAll","length","scriptLinkage","getElementById","smoothScroll","topLocation","zIndex","nest","css","urlParam","URLSearchParams","getAttribute","split","get","textStyle","createElement","setAttribute","jumpToCSS","textContent","head","appendChild","wrapperEl","classList","add","HTML","innerHTML","body","style","top","navEl","querySelector","navList","forEach","item","index","linkID","linkListItem","options","title","semiColonSplit","splitOn","optionString","undefined","trim","linkATag","parentElement","closest","parentListItem","childUl","parentNode","lastChild","addEventListener","event","documentElement","setTimeout","remove","minimizeButton","withinBoundaries","composedPath","includes","contains","click","el","panelHeader","panelBody","parseInt","getBoundingClientRect","jumpToHeaderHeight","offsetHeight","maxHeight","setMaxHeight"],"mappings":"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","sourcesContent":["/*!\n    * Jump to navigation v1.0.3\n    * Need description.\n    *\n    * Copyright 2022 Marshall Crosby\n    * https://marshallcrosby.com\n*/\n\n\n/* ------------------------------------------------------------------------------\n    **TODO:\n    ✓ 1. Query params\n        • Allow custom Y location\n        • Make nesting an option\n        • Allow custom z-index\n        • Allow external css\n    ✓ 2. Click outside closes panel\n    ✓ 3. CSS dynamic max-height\n    4. Focus nav item on current section in view\n    5. Add static site navigation\n-------------------------------------------------------------------------------- */\n\n\nlet jumpToSections = document.querySelectorAll('[data-jtn-anchor]');\n\n(function () {\n    \"use strict\"\n\n\n    if (jumpToSections.length > 0) {\n\n        /* --------------------------------------------------------------------------\n            Query params\n        ---------------------------------------------------------------------------- */\n    \n        let scriptLinkage = document.getElementById('jump-to-nav-js');\n        let smoothScroll = null;\n        let topLocation = null;\n        let zIndex = null;\n        let nest = null;\n        let css = null;\n    \n        if (scriptLinkage) {\n            let urlParam = new URLSearchParams(scriptLinkage.getAttribute('src').split('?')[1]);\n            \n            smoothScroll = urlParam.get('smooth');\n            topLocation = urlParam.get('top');\n            zIndex = urlParam.get('z-index');\n            nest = urlParam.get('nest');\n            css = urlParam.get('css');\n        }\n    \n    \n        /* --------------------------------------------------------------------------\n            Render nav css\n        ---------------------------------------------------------------------------- */\n    \n        if (css !== 'external') {\n            let textStyle = document.createElement('style');\n            textStyle.setAttribute('id', 'jumpToNavStyle');\n        \n            let jumpToCSS = `//import jump-to-nav.css`;\n        \n            // Apply in page styles to style tag\n            textStyle.textContent = jumpToCSS;\n        \n            // Add in page styles to head\n            document.head.appendChild(textStyle);\n        }\n    \n    \n        /* --------------------------------------------------------------------------\n            Create navigation element and populat it\n        ---------------------------------------------------------------------------- */\n        \n        //\n        // Render nav elements\n        //\n    \n        let wrapperEl = document.createElement('div');\n        wrapperEl.classList.add('jump-to-nav-wrapper');\n    \n        let HTML = `//import _jump-to-nav.html`;\n        wrapperEl.innerHTML = HTML;\n        document.body.appendChild(wrapperEl);\n\n        if (topLocation !== null) {\n            wrapperEl.style.top = topLocation;\n        }\n        \n        if (zIndex !== null) {\n            wrapperEl.style.zIndex = zIndex;\n        }\n    \n    \n        //\n        // Setup elements and add li and links\n        //\n    \n        let navEl = document.querySelector('.jump-to-nav__nav');\n        let navList = document.createElement('ul');\n    \n        navEl.appendChild(navList);\n    \n        // let searchTermsArray = [];\n        \n        jumpToSections.forEach(function (item, index) {\n            let linkID = item.getAttribute('id');\n            let linkListItem = document.createElement('li');\n            let options = null;\n            \n            linkListItem.classList.add('jump-to-nav__item');\n            linkListItem.setAttribute('data-jtn-id', linkID);\n    \n            options = {\n                title: null\n            };\n    \n            if (item.getAttribute('data-jtn-anchor') !== '') {\n                let semiColonSplit = item.getAttribute('data-jtn-anchor').split(';');\n                \n                // Assign option values if any\n                semiColonSplit.forEach(function (item, index) {\n                    if (semiColonSplit[index].split('title:')[1] !== undefined) {\n                        options.title = parseOption(semiColonSplit[index], 'title');\n                    }\n                });          \n            }\n    \n            let linkTitleText = (options.title !== null) ? options.title : linkID;\n            let linkATag = `\n                <a href=\"#${ linkID }\">${ linkTitleText }</a>\n            `;\n    \n            linkListItem.innerHTML = linkATag;\n    \n            navList.appendChild(linkListItem);\n    \n            if (item.parentElement.closest('[data-jtn-anchor]')) {\n                let parentListItem = item.parentElement.closest('[data-jtn-anchor]');\n                parentListItem.setAttribute('data-jtn-has-child', 'true');\n                linkListItem.setAttribute('data-jtn-parent', parentListItem.getAttribute('id'));    \n            }\n    \n            // let searchTermsObj = {};\n            // searchTermsObj['title'] = linkTitleText;\n            // searchTermsObj['id'] = linkID;\n            // searchTermsArray.push(searchTermsObj);\n        });\n    \n    \n        //\n        // Nest li(s) if jumpToSections is nested\n        //\n    \n        if (nest !== null) {\n            let linkChildren = navEl.querySelectorAll('[data-jtn-parent]');\n    \n            linkChildren.forEach(function(item, index) {\n                let parentItem = navEl.querySelector('[data-jtn-id=\"' + item.getAttribute('data-jtn-parent') + '\"]');\n        \n                parentItem.appendChild(item);\n            });\n        \n        \n            //\n            // Add ul inside items with children\n            //\n            \n            let nestedChildren = navEl.querySelectorAll('[data-jtn-id]');\n            \n            nestedChildren.forEach(function(item, index) {\n                if (item.querySelector('[data-jtn-parent]')) {\n                    var childUl = document.createElement('ul');\n                    item.appendChild(childUl);\n                }\n            });\n        \n        \n            //\n            // Move unwrapped list items into ul\n            //\n        \n            let unwrapListItems = navEl.querySelectorAll('[data-jtn-id] > [data-jtn-id]');\n        \n            unwrapListItems.forEach(function(item, index) {\n                let siblingUl = item.parentNode.lastChild;\n        \n                siblingUl.appendChild(item);\n            });\n        }\n    \n    \n        //\n        // Add smooth scroll when using jump to nav\n        //\n    \n        if (smoothScroll !== null) {\n            let navAnchor = navEl.querySelectorAll('.jump-to-nav__item > a');\n    \n            navAnchor.forEach(function (item, index) {\n                item.addEventListener('click', function (event) {\n                    document.documentElement.classList.add('js-jump-to-nav-smooth-scroll');\n                    \n                    setTimeout(function () {\n                        document.documentElement.classList.remove('js-jump-to-nav-smooth-scroll');\n                    }, 400);\n                });\n            });\n        }\n    \n    \n        //\n        // Maximize / minimize buttons\n        //\n    \n        let maximizeButton = wrapperEl.querySelector('.jump-to-nav__maximize');\n    \n        maximizeButton.addEventListener('click', function () {\n            wrapperEl.classList.add('jump-to-nav-wrapper--showing');\n        });\n    \n        let minimizeButton = wrapperEl.querySelector('.jump-to-nav__minimize');\n    \n        minimizeButton.addEventListener('click', function () {\n            wrapperEl.classList.remove('jump-to-nav-wrapper--showing');\n        });\n    \n    \n        //\n        // Click outside\n        //\n        \n        document.addEventListener('click', function (event) {\n            let withinBoundaries = event.composedPath().includes(wrapperEl);\n            \n            if (wrapperEl.classList.contains('jump-to-nav-wrapper--showing')) {\n                if (!withinBoundaries) {\n                    minimizeButton.click();\n                }\n            }\n        });\n       \n        setMaxHeight(wrapperEl);\n    }\n\n    /* --------------------------------------------------------------------------\n        Functions\n    ---------------------------------------------------------------------------- */\n\n    //\n    // Parse options (function)\n    //\n\n    function parseOption(splitOn, optionString) {\n        return splitOn.split(optionString + ':')[1].trim();\n    }\n\n\n    //\n    // Set height for overflow scrolling if needed\n    //\n\n    function setMaxHeight(el) {\n        let panelHeader = document.querySelector('.jump-to-nav__header');\n        let panelBody = document.querySelector('.jump-to-nav__body');\n        let topLocation = parseInt(el.getBoundingClientRect().top);\n        let jumpToHeaderHeight = parseInt(panelHeader.offsetHeight);\n        let maxHeight = (topLocation + jumpToHeaderHeight) + 60;\n\n        panelBody.style.maxHeight = 'calc(100vh - ' + maxHeight + 'px)';\n    }\n})();"]}